Search.setIndex({"alltitles": {"API": [[1, "api"], [2, "api"], [3, "api"], [4, "api"], [5, "api"], [6, "api"], [7, "api"], [8, "api"], [9, "api"], [10, "api"], [11, "api"], [12, "api"], [13, "api"], [14, "api"], [15, "api"], [16, "api"], [17, "api"], [18, "api"], [19, "api"], [20, "api"], [21, "api"], [22, "api"], [23, "api"], [24, "api"], [25, "api"], [26, "api"], [27, "api"], [28, "api"], [29, "api"], [30, "api"], [31, "api"], [32, "api"], [33, "api"], [34, "api"], [35, "api"], [36, "api"], [37, "api"], [38, "api"], [39, "api"]], "API Reference": [[0, null]], "Aliases": [[10, "aliases"], [11, "aliases"], [14, "aliases"], [16, "aliases"], [39, "aliases"]], "Application": [[40, null]], "Builtin Tasks": [[44, "builtin-tasks"]], "CLI Arguments": [[40, "cli-arguments"]], "Classes": [[2, "classes"], [3, "classes"], [5, "classes"], [6, "classes"], [8, "classes"], [9, "classes"], [10, "classes"], [11, "classes"], [12, "classes"], [14, "classes"], [15, "classes"], [16, "classes"], [18, "classes"], [19, "classes"], [20, "classes"], [21, "classes"], [22, "classes"], [23, "classes"], [24, "classes"], [25, "classes"], [26, "classes"], [27, "classes"], [28, "classes"], [29, "classes"], [30, "classes"], [31, "classes"], [32, "classes"], [33, "classes"], [34, "classes"], [35, "classes"], [36, "classes"], [37, "classes"]], "Commands": [[40, "commands"]], "Common Options": [[40, "common-options"]], "Custom Task": [[44, "custom-task"]], "Custom initialization": [[40, "custom-initialization"]], "Custom variables": [[43, "custom-variables"]], "Data": [[1, "data"], [7, "data"], [24, "data"], [32, "data"]], "Dependency resolution": [[42, "dependency-resolution"]], "Design goals": [[45, "design-goals"]], "Environment defaults": [[43, "environment-defaults"]], "Example": [[2, null], [10, null], [24, null], [24, null], [24, null], [24, null], [24, null], [24, null], [24, null], [24, null], [24, null], [26, null], [27, null], [27, null], [28, null], [29, null], [30, null], [30, null], [31, null], [31, null], [40, null], [44, null], [44, null], [44, null], [44, null], [44, null], [44, null], [45, "example"]], "Filters": [[43, "filters"]], "Functions": [[3, "functions"], [4, "functions"], [7, "functions"], [8, "functions"], [9, "functions"], [10, "functions"], [11, "functions"], [17, "functions"], [38, "functions"], [39, "functions"]], "Globals": [[43, "globals"]], "Guides": [[41, null]], "Installation": [[45, "installation"]], "Module Contents": [[4, "module-contents"], [5, "module-contents"], [6, "module-contents"], [7, "module-contents"], [8, "module-contents"], [9, "module-contents"], [10, "module-contents"], [12, "module-contents"], [13, "module-contents"], [14, "module-contents"], [15, "module-contents"], [16, "module-contents"], [17, "module-contents"], [18, "module-contents"], [20, "module-contents"], [21, "module-contents"], [22, "module-contents"], [23, "module-contents"], [25, "module-contents"], [26, "module-contents"], [27, "module-contents"], [28, "module-contents"], [29, "module-contents"], [30, "module-contents"], [31, "module-contents"], [32, "module-contents"], [34, "module-contents"], [35, "module-contents"], [36, "module-contents"], [37, "module-contents"], [38, "module-contents"], [39, "module-contents"]], "Nested dictionaries": [[42, "nested-dictionaries"]], "Nested pipelines": [[42, "nested-pipelines"]], "Note": [[24, null], [24, null], [24, null], [24, null], [24, null], [26, null], [27, null], [29, null], [30, null], [31, null], [44, null], [44, null], [44, null], [44, null]], "Package Contents": [[1, "package-contents"], [2, "package-contents"], [3, "package-contents"], [11, "package-contents"], [19, "package-contents"], [24, "package-contents"], [33, "package-contents"]], "Pipelines": [[42, null]], "SQL Templates": [[43, null]], "Submodules": [[1, "submodules"]], "Subpackages": [[1, "subpackages"]], "Tasks": [[44, null]], "The {%split%} tag": [[43, "the-split-tag"]], "Tip": [[45, null]], "Type awareness": [[43, "type-awareness"]], "Warning": [[24, null], [27, null], [42, null]], "Welcome to ralsei\u2019s documentation!": [[45, null]], "describe": [[40, "describe"]], "graph": [[40, "graph"]], "ralsei": [[1, null]], "ralsei.app": [[2, null]], "ralsei.connection": [[3, null]], "ralsei.connection.create": [[4, null]], "ralsei.connection.ext": [[5, null]], "ralsei.connection.jinja": [[6, null]], "ralsei.console": [[7, null]], "ralsei.contextmanagers": [[8, null]], "ralsei.db_actions": [[9, null]], "ralsei.dialect": [[10, null]], "ralsei.graph": [[11, null]], "ralsei.graph.dag": [[12, null]], "ralsei.graph.error": [[13, null]], "ralsei.graph.outputof": [[14, null]], "ralsei.graph.path": [[15, null]], "ralsei.graph.pipeline": [[16, null]], "ralsei.graph.resolver_context": [[17, null]], "ralsei.graph.sequence": [[18, null]], "ralsei.jinja": [[19, null]], "ralsei.jinja.adapter": [[20, null]], "ralsei.jinja.environment": [[21, null]], "ralsei.jinja.interface": [[22, null]], "ralsei.jinja.wrapper": [[23, null]], "ralsei.task": [[24, null]], "ralsei.task.add_columns": [[25, null]], "ralsei.task.add_columns_sql": [[26, null]], "ralsei.task.base": [[27, null]], "ralsei.task.create_table": [[28, null]], "ralsei.task.create_table_sql": [[29, null]], "ralsei.task.map_to_new_columns": [[30, null]], "ralsei.task.map_to_new_table": [[31, null]], "ralsei.task.rowcontext": [[32, null]], "ralsei.types": [[33, null]], "ralsei.types.column": [[34, null]], "ralsei.types.primitives": [[35, null]], "ralsei.types.to_sql": [[36, null]], "ralsei.types.value_column": [[37, null]], "ralsei.utils": [[38, null]], "ralsei.wrappers": [[39, null]], "run, delete, redo": [[40, "run-delete-redo"]]}, "docurls": ["apidocs/index.html", "apidocs/ralsei/ralsei.html", "apidocs/ralsei/ralsei.app.html", "apidocs/ralsei/ralsei.connection.html", "apidocs/ralsei/ralsei.connection.create.html", "apidocs/ralsei/ralsei.connection.ext.html", "apidocs/ralsei/ralsei.connection.jinja.html", "apidocs/ralsei/ralsei.console.html", "apidocs/ralsei/ralsei.contextmanagers.html", "apidocs/ralsei/ralsei.db_actions.html", "apidocs/ralsei/ralsei.dialect.html", "apidocs/ralsei/ralsei.graph.html", "apidocs/ralsei/ralsei.graph.dag.html", "apidocs/ralsei/ralsei.graph.error.html", "apidocs/ralsei/ralsei.graph.outputof.html", "apidocs/ralsei/ralsei.graph.path.html", "apidocs/ralsei/ralsei.graph.pipeline.html", "apidocs/ralsei/ralsei.graph.resolver_context.html", "apidocs/ralsei/ralsei.graph.sequence.html", "apidocs/ralsei/ralsei.jinja.html", "apidocs/ralsei/ralsei.jinja.adapter.html", "apidocs/ralsei/ralsei.jinja.environment.html", "apidocs/ralsei/ralsei.jinja.interface.html", "apidocs/ralsei/ralsei.jinja.wrapper.html", "apidocs/ralsei/ralsei.task.html", "apidocs/ralsei/ralsei.task.add_columns.html", "apidocs/ralsei/ralsei.task.add_columns_sql.html", "apidocs/ralsei/ralsei.task.base.html", "apidocs/ralsei/ralsei.task.create_table.html", "apidocs/ralsei/ralsei.task.create_table_sql.html", "apidocs/ralsei/ralsei.task.map_to_new_columns.html", "apidocs/ralsei/ralsei.task.map_to_new_table.html", "apidocs/ralsei/ralsei.task.rowcontext.html", "apidocs/ralsei/ralsei.types.html", "apidocs/ralsei/ralsei.types.column.html", "apidocs/ralsei/ralsei.types.primitives.html", "apidocs/ralsei/ralsei.types.to_sql.html", "apidocs/ralsei/ralsei.types.value_column.html", "apidocs/ralsei/ralsei.utils.html", "apidocs/ralsei/ralsei.wrappers.html", "guides/application.html", "guides/index.html", "guides/pipelines.html", "guides/sql_templates.html", "guides/tasks.html", "index.html"], "envversion": {"sphinx": 62, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1}, "indexentries": {"__all__ (in module ralsei)": [[1, "ralsei.__all__", false]], "__call__() (ralsei.db_actions.addcolumns method)": [[9, "ralsei.db_actions.AddColumns.__call__", false]], "__call__() (ralsei.db_actions.dropcolumns method)": [[9, "ralsei.db_actions.DropColumns.__call__", false]], "__enter__() (ralsei.connection.connectionenvironment method)": [[3, "ralsei.connection.ConnectionEnvironment.__enter__", false]], "__enter__() (ralsei.connection.connectionext method)": [[3, "ralsei.connection.ConnectionExt.__enter__", false]], "__enter__() (ralsei.connection.ext.connectionext method)": [[5, "ralsei.connection.ext.ConnectionExt.__enter__", false]], "__enter__() (ralsei.connection.jinja.connectionenvironment method)": [[6, "ralsei.connection.jinja.ConnectionEnvironment.__enter__", false]], "__enter__() (ralsei.contextmanagers.contextmanager method)": [[8, "ralsei.contextmanagers.ContextManager.__enter__", false]], "__enter__() (ralsei.contextmanagers.multicontextmanager method)": [[8, "ralsei.contextmanagers.MultiContextManager.__enter__", false]], "__enter__() (ralsei.task.rowcontext.rowcontext method)": [[32, "ralsei.task.rowcontext.RowContext.__enter__", false]], "__exit__() (ralsei.connection.connectionenvironment method)": [[3, "ralsei.connection.ConnectionEnvironment.__exit__", false]], "__exit__() (ralsei.connection.jinja.connectionenvironment method)": [[6, "ralsei.connection.jinja.ConnectionEnvironment.__exit__", false]], "__exit__() (ralsei.contextmanagers.contextmanager method)": [[8, "ralsei.contextmanagers.ContextManager.__exit__", false]], "__exit__() (ralsei.contextmanagers.multicontextmanager method)": [[8, "ralsei.contextmanagers.MultiContextManager.__exit__", false]], "__exit__() (ralsei.task.rowcontext.rowcontext method)": [[32, "ralsei.task.rowcontext.RowContext.__exit__", false]], "__new__() (ralsei.graph.path.treepath method)": [[15, "ralsei.graph.path.TreePath.__new__", false]], "__new__() (ralsei.graph.treepath method)": [[11, "ralsei.graph.TreePath.__new__", false]], "__post_init__() (ralsei.graph.outputof method)": [[11, "ralsei.graph.OutputOf.__post_init__", false]], "__post_init__() (ralsei.graph.outputof.outputof method)": [[14, "ralsei.graph.outputof.OutputOf.__post_init__", false]], "__post_init__() (ralsei.types.placeholder method)": [[33, "ralsei.types.Placeholder.__post_init__", false]], "__post_init__() (ralsei.types.primitives.placeholder method)": [[35, "ralsei.types.primitives.Placeholder.__post_init__", false]], "__post_init__() (ralsei.types.primitives.ralsei.types.primitives.placeholder.placeholder method)": [[43, "ralsei.types.primitives.ralsei.types.primitives.Placeholder.Placeholder.__post_init__", false]], "__repr__() (ralsei.graph.path.treepath method)": [[15, "ralsei.graph.path.TreePath.__repr__", false]], "__repr__() (ralsei.graph.treepath method)": [[11, "ralsei.graph.TreePath.__repr__", false]], "__str__() (ralsei.db_actions.addcolumns method)": [[9, "ralsei.db_actions.AddColumns.__str__", false]], "__str__() (ralsei.db_actions.dropcolumns method)": [[9, "ralsei.db_actions.DropColumns.__str__", false]], "__str__() (ralsei.graph.path.treepath method)": [[15, "ralsei.graph.path.TreePath.__str__", false]], "__str__() (ralsei.graph.treepath method)": [[11, "ralsei.graph.TreePath.__str__", false]], "__str__() (ralsei.types.primitives.ralsei.types.primitives.table.table method)": [[43, "ralsei.types.primitives.ralsei.types.primitives.Table.Table.__str__", false]], "__str__() (ralsei.types.primitives.table method)": [[35, "ralsei.types.primitives.Table.__str__", false]], "__str__() (ralsei.types.table method)": [[33, "ralsei.types.Table.__str__", false]], "_add_columns (ralsei.task.add_columns.addcolumnstask attribute)": [[25, "ralsei.task.add_columns.AddColumnsTask._add_columns", false]], "_add_columns (ralsei.task.addcolumnstask attribute)": [[24, "ralsei.task.AddColumnsTask._add_columns", false]], "_columns (ralsei.task.add_columns.addcolumnstask attribute)": [[25, "ralsei.task.add_columns.AddColumnsTask._columns", false]], "_columns (ralsei.task.addcolumnstask attribute)": [[24, "ralsei.task.AddColumnsTask._columns", false]], "_create_engine() (ralsei.app.ralsei method)": [[2, "ralsei.app.Ralsei._create_engine", false]], "_delete() (ralsei.task.add_columns.addcolumnstask method)": [[25, "ralsei.task.add_columns.AddColumnsTask._delete", false]], "_delete() (ralsei.task.addcolumnstask method)": [[24, "ralsei.task.AddColumnsTask._delete", false]], "_delete() (ralsei.task.base.taskimpl method)": [[27, "ralsei.task.base.TaskImpl._delete", false]], "_delete() (ralsei.task.create_table.createtabletask method)": [[28, "ralsei.task.create_table.CreateTableTask._delete", false]], "_delete() (ralsei.task.createtabletask method)": [[24, "ralsei.task.CreateTableTask._delete", false]], "_delete() (ralsei.task.taskimpl method)": [[24, "ralsei.task.TaskImpl._delete", false]], "_drop_columns (ralsei.task.add_columns.addcolumnstask attribute)": [[25, "ralsei.task.add_columns.AddColumnsTask._drop_columns", false]], "_drop_columns (ralsei.task.addcolumnstask attribute)": [[24, "ralsei.task.AddColumnsTask._drop_columns", false]], "_drop_sql (ralsei.task.create_table.createtabletask attribute)": [[28, "ralsei.task.create_table.CreateTableTask._drop_sql", false]], "_drop_sql (ralsei.task.createtabletask attribute)": [[24, "ralsei.task.CreateTableTask._drop_sql", false]], "_exists() (ralsei.task.add_columns.addcolumnstask method)": [[25, "ralsei.task.add_columns.AddColumnsTask._exists", false]], "_exists() (ralsei.task.addcolumnstask method)": [[24, "ralsei.task.AddColumnsTask._exists", false]], "_exists() (ralsei.task.base.taskimpl method)": [[27, "ralsei.task.base.TaskImpl._exists", false]], "_exists() (ralsei.task.create_table.createtabletask method)": [[28, "ralsei.task.create_table.CreateTableTask._exists", false]], "_exists() (ralsei.task.createtabletask method)": [[24, "ralsei.task.CreateTableTask._exists", false]], "_exists() (ralsei.task.taskimpl method)": [[24, "ralsei.task.TaskImpl._exists", false]], "_on_connect() (ralsei.app.ralsei method)": [[2, "ralsei.app.Ralsei._on_connect", false]], "_prepare_columns() (ralsei.task.add_columns.addcolumnstask method)": [[25, "ralsei.task.add_columns.AddColumnsTask._prepare_columns", false]], "_prepare_columns() (ralsei.task.addcolumnstask method)": [[24, "ralsei.task.AddColumnsTask._prepare_columns", false]], "_prepare_env() (ralsei.app.ralsei method)": [[2, "ralsei.app.Ralsei._prepare_env", false]], "_prepare_table() (ralsei.task.create_table.createtabletask method)": [[28, "ralsei.task.create_table.CreateTableTask._prepare_table", false]], "_prepare_table() (ralsei.task.createtabletask method)": [[24, "ralsei.task.CreateTableTask._prepare_table", false]], "_run() (ralsei.task.base.taskimpl method)": [[27, "ralsei.task.base.TaskImpl._run", false]], "_run() (ralsei.task.taskimpl method)": [[24, "ralsei.task.TaskImpl._run", false]], "_scripts (ralsei.task.base.taskimpl attribute)": [[27, "ralsei.task.base.TaskImpl._scripts", false]], "_scripts (ralsei.task.taskimpl attribute)": [[24, "ralsei.task.TaskImpl._scripts", false]], "_table (ralsei.task.add_columns.addcolumnstask attribute)": [[25, "ralsei.task.add_columns.AddColumnsTask._table", false]], "_table (ralsei.task.addcolumnstask attribute)": [[24, "ralsei.task.AddColumnsTask._table", false]], "_table (ralsei.task.create_table.createtabletask attribute)": [[28, "ralsei.task.create_table.CreateTableTask._table", false]], "_table (ralsei.task.createtabletask attribute)": [[24, "ralsei.task.CreateTableTask._table", false]], "adapter (ralsei.jinja.environment.sqlenvironment property)": [[21, "ralsei.jinja.environment.SqlEnvironment.adapter", false]], "adapter (ralsei.jinja.interface.isqlenvironment property)": [[22, "ralsei.jinja.interface.ISqlEnvironment.adapter", false]], "adapter (ralsei.jinja.isqlenvironment property)": [[19, "ralsei.jinja.ISqlEnvironment.adapter", false]], "adapter (ralsei.jinja.sqlenvironment property)": [[19, "ralsei.jinja.SqlEnvironment.adapter", false]], "adapter (ralsei.jinja.sqlenvironmentwrapper property)": [[19, "ralsei.jinja.SqlEnvironmentWrapper.adapter", false]], "adapter (ralsei.jinja.wrapper.sqlenvironmentwrapper property)": [[23, "ralsei.jinja.wrapper.SqlEnvironmentWrapper.adapter", false]], "add_to_input() (in module ralsei.wrappers)": [[39, "ralsei.wrappers.add_to_input", false]], "add_to_output() (in module ralsei.wrappers)": [[39, "ralsei.wrappers.add_to_output", false]], "addcolumns (class in ralsei.db_actions)": [[9, "ralsei.db_actions.AddColumns", false]], "addcolumnssql (class in ralsei.task)": [[24, "ralsei.task.AddColumnsSql", false]], "addcolumnssql (class in ralsei.task.add_columns_sql)": [[26, "ralsei.task.add_columns_sql.AddColumnsSql", false]], "addcolumnstask (class in ralsei.task)": [[24, "ralsei.task.AddColumnsTask", false]], "addcolumnstask (class in ralsei.task.add_columns)": [[25, "ralsei.task.add_columns.AddColumnsTask", false]], "autoincrement_key (ralsei.dialect.basedialectinfo attribute)": [[10, "ralsei.dialect.BaseDialectInfo.autoincrement_key", false]], "autoincrement_key (ralsei.dialect.sqlitedialectinfo attribute)": [[10, "ralsei.dialect.SqliteDialectInfo.autoincrement_key", false]], "base (ralsei.jinja.environment.sqlenvironment property)": [[21, "ralsei.jinja.environment.SqlEnvironment.base", false]], "base (ralsei.jinja.interface.isqlenvironment property)": [[22, "ralsei.jinja.interface.ISqlEnvironment.base", false]], "base (ralsei.jinja.isqlenvironment property)": [[19, "ralsei.jinja.ISqlEnvironment.base", false]], "base (ralsei.jinja.sqlenvironment property)": [[19, "ralsei.jinja.SqlEnvironment.base", false]], "base (ralsei.jinja.sqlenvironmentwrapper property)": [[19, "ralsei.jinja.SqlEnvironmentWrapper.base", false]], "base (ralsei.jinja.wrapper.sqlenvironmentwrapper property)": [[23, "ralsei.jinja.wrapper.SqlEnvironmentWrapper.base", false]], "basedialectinfo (class in ralsei.dialect)": [[10, "ralsei.dialect.BaseDialectInfo", false]], "build_cli() (ralsei.app.ralsei class method)": [[2, "ralsei.app.Ralsei.build_cli", false]], "build_dag() (ralsei.graph.pipeline method)": [[11, "ralsei.graph.Pipeline.build_dag", false]], "build_dag() (ralsei.graph.pipeline.pipeline method)": [[16, "ralsei.graph.pipeline.Pipeline.build_dag", false]], "column (class in ralsei.types)": [[33, "ralsei.types.Column", false]], "column (class in ralsei.types.column)": [[34, "ralsei.types.column.Column", false]], "column (in module ralsei-globals)": [[43, "ralsei-globals.Column", false]], "column (ralsei.types.column.columndefinition attribute)": [[34, "ralsei.types.column.ColumnDefinition.column", false]], "column (ralsei.types.columndefinition attribute)": [[33, "ralsei.types.ColumnDefinition.column", false]], "columnbase (class in ralsei.types)": [[33, "ralsei.types.ColumnBase", false]], "columnbase (class in ralsei.types.column)": [[34, "ralsei.types.column.ColumnBase", false]], "columndefinition (class in ralsei.types)": [[33, "ralsei.types.ColumnDefinition", false]], "columndefinition (class in ralsei.types.column)": [[34, "ralsei.types.column.ColumnDefinition", false]], "columnrendered (class in ralsei.types)": [[33, "ralsei.types.ColumnRendered", false]], "columnrendered (class in ralsei.types.column)": [[34, "ralsei.types.column.ColumnRendered", false]], "columns (ralsei.task.add_columns_sql.addcolumnssql attribute)": [[26, "ralsei.task.add_columns_sql.AddColumnsSql.columns", false]], "columns (ralsei.task.add_columns_sql.ralsei.task.add_columns_sql.addcolumnssql.addcolumnssql attribute)": [[44, "ralsei.task.add_columns_sql.ralsei.task.add_columns_sql.AddColumnsSql.AddColumnsSql.columns", false]], "columns (ralsei.task.addcolumnssql attribute)": [[24, "ralsei.task.AddColumnsSql.columns", false]], "columns (ralsei.task.map_to_new_columns.maptonewcolumns attribute)": [[30, "ralsei.task.map_to_new_columns.MapToNewColumns.columns", false]], "columns (ralsei.task.map_to_new_columns.ralsei.task.map_to_new_columns.maptonewcolumns.maptonewcolumns attribute)": [[44, "ralsei.task.map_to_new_columns.ralsei.task.map_to_new_columns.MapToNewColumns.MapToNewColumns.columns", false]], "columns (ralsei.task.map_to_new_table.maptonewtable attribute)": [[31, "ralsei.task.map_to_new_table.MapToNewTable.columns", false]], "columns (ralsei.task.map_to_new_table.ralsei.task.map_to_new_table.maptonewtable.maptonewtable attribute)": [[44, "ralsei.task.map_to_new_table.ralsei.task.map_to_new_table.MapToNewTable.MapToNewTable.columns", false]], "columns (ralsei.task.maptonewcolumns attribute)": [[24, "ralsei.task.MapToNewColumns.columns", false]], "columns (ralsei.task.maptonewtable attribute)": [[24, "ralsei.task.MapToNewTable.columns", false]], "columns_exist() (in module ralsei.db_actions)": [[9, "ralsei.db_actions.columns_exist", false]], "compose() (in module ralsei.wrappers)": [[39, "ralsei.wrappers.compose", false]], "compose_one() (in module ralsei.wrappers)": [[39, "ralsei.wrappers.compose_one", false]], "connect() (ralsei.app.ralsei method)": [[2, "ralsei.app.Ralsei.connect", false]], "connectionenvironment (class in ralsei.connection)": [[3, "ralsei.connection.ConnectionEnvironment", false]], "connectionenvironment (class in ralsei.connection.jinja)": [[6, "ralsei.connection.jinja.ConnectionEnvironment", false]], "connectionext (class in ralsei.connection)": [[3, "ralsei.connection.ConnectionExt", false]], "connectionext (class in ralsei.connection.ext)": [[5, "ralsei.connection.ext.ConnectionExt", false]], "console (in module ralsei.console)": [[7, "ralsei.console.console", false]], "context (ralsei.task.map_to_new_columns.maptonewcolumns attribute)": [[30, "ralsei.task.map_to_new_columns.MapToNewColumns.context", false]], "context (ralsei.task.map_to_new_columns.ralsei.task.map_to_new_columns.maptonewcolumns.maptonewcolumns attribute)": [[44, "ralsei.task.map_to_new_columns.ralsei.task.map_to_new_columns.MapToNewColumns.MapToNewColumns.context", false]], "context (ralsei.task.map_to_new_table.maptonewtable attribute)": [[31, "ralsei.task.map_to_new_table.MapToNewTable.context", false]], "context (ralsei.task.map_to_new_table.ralsei.task.map_to_new_table.maptonewtable.maptonewtable attribute)": [[44, "ralsei.task.map_to_new_table.ralsei.task.map_to_new_table.MapToNewTable.MapToNewTable.context", false]], "context (ralsei.task.maptonewcolumns attribute)": [[24, "ralsei.task.MapToNewColumns.context", false]], "context (ralsei.task.maptonewtable attribute)": [[24, "ralsei.task.MapToNewTable.context", false]], "contextmanager (class in ralsei.contextmanagers)": [[8, "ralsei.contextmanagers.ContextManager", false]], "create() (ralsei.task.base.taskdef method)": [[27, "ralsei.task.base.TaskDef.create", false]], "create() (ralsei.task.taskdef method)": [[24, "ralsei.task.TaskDef.create", false]], "create_engine() (in module ralsei.connection)": [[3, "ralsei.connection.create_engine", false]], "create_engine() (in module ralsei.connection.create)": [[4, "ralsei.connection.create.create_engine", false]], "create_tasks() (ralsei.graph.pipeline method)": [[11, "ralsei.graph.Pipeline.create_tasks", false]], "create_tasks() (ralsei.graph.pipeline.pipeline method)": [[16, "ralsei.graph.pipeline.Pipeline.create_tasks", false]], "createtablesql (class in ralsei.task)": [[24, "ralsei.task.CreateTableSql", false]], "createtablesql (class in ralsei.task.create_table_sql)": [[29, "ralsei.task.create_table_sql.CreateTableSql", false]], "createtabletask (class in ralsei.task)": [[24, "ralsei.task.CreateTableTask", false]], "createtabletask (class in ralsei.task.create_table)": [[28, "ralsei.task.create_table.CreateTableTask", false]], "cyclicgrapherror": [[11, "ralsei.graph.CyclicGraphError", false], [13, "ralsei.graph.error.CyclicGraphError", false]], "dag (class in ralsei.graph)": [[11, "ralsei.graph.DAG", false]], "dag (class in ralsei.graph.dag)": [[12, "ralsei.graph.dag.DAG", false]], "dag (ralsei.app.ralsei attribute)": [[2, "ralsei.app.Ralsei.dag", false]], "definition (ralsei.types.column.columnrendered property)": [[34, "ralsei.types.column.ColumnRendered.definition", false]], "definition (ralsei.types.columnrendered property)": [[33, "ralsei.types.ColumnRendered.definition", false]], "delete() (ralsei.graph.sequence.tasksequence method)": [[18, "ralsei.graph.sequence.TaskSequence.delete", false]], "delete() (ralsei.graph.tasksequence method)": [[11, "ralsei.graph.TaskSequence.delete", false]], "delete() (ralsei.task.base.task method)": [[27, "ralsei.task.base.Task.delete", false]], "delete() (ralsei.task.base.taskimpl method)": [[27, "ralsei.task.base.TaskImpl.delete", false]], "delete() (ralsei.task.task method)": [[24, "ralsei.task.Task.delete", false]], "delete() (ralsei.task.taskimpl method)": [[24, "ralsei.task.TaskImpl.delete", false]], "dialect (in module ralsei-globals)": [[43, "ralsei-globals.dialect", false]], "dialect_info (ralsei.connection.connectionenvironment property)": [[3, "ralsei.connection.ConnectionEnvironment.dialect_info", false]], "dialect_info (ralsei.connection.jinja.connectionenvironment property)": [[6, "ralsei.connection.jinja.ConnectionEnvironment.dialect_info", false]], "dialect_info (ralsei.jinja.environment.sqlenvironment property)": [[21, "ralsei.jinja.environment.SqlEnvironment.dialect_info", false]], "dialect_info (ralsei.jinja.interface.isqlenvironment property)": [[22, "ralsei.jinja.interface.ISqlEnvironment.dialect_info", false]], "dialect_info (ralsei.jinja.isqlenvironment property)": [[19, "ralsei.jinja.ISqlEnvironment.dialect_info", false]], "dialect_info (ralsei.jinja.sqlenvironment property)": [[19, "ralsei.jinja.SqlEnvironment.dialect_info", false]], "dialect_info (ralsei.jinja.sqlenvironmentwrapper property)": [[19, "ralsei.jinja.SqlEnvironmentWrapper.dialect_info", false]], "dialect_info (ralsei.jinja.wrapper.sqlenvironmentwrapper property)": [[23, "ralsei.jinja.wrapper.SqlEnvironmentWrapper.dialect_info", false]], "dialectinfo (class in ralsei.dialect)": [[10, "ralsei.dialect.DialectInfo", false]], "dict() (in module ralsei-globals)": [[43, "ralsei-globals.dict", false]], "dropcolumns (class in ralsei.db_actions)": [[9, "ralsei.db_actions.DropColumns", false]], "engine (ralsei.app.ralsei attribute)": [[2, "ralsei.app.Ralsei.engine", false]], "env (ralsei.app.ralsei attribute)": [[2, "ralsei.app.Ralsei.env", false]], "env (ralsei.task.base.taskimpl attribute)": [[27, "ralsei.task.base.TaskImpl.env", false]], "env (ralsei.task.taskimpl attribute)": [[24, "ralsei.task.TaskImpl.env", false]], "execute_text() (ralsei.connection.connectionext method)": [[3, "ralsei.connection.ConnectionExt.execute_text", false]], "execute_text() (ralsei.connection.ext.connectionext method)": [[5, "ralsei.connection.ext.ConnectionExt.execute_text", false]], "execute_with_length_hint() (ralsei.connection.connectionenvironment method)": [[3, "ralsei.connection.ConnectionEnvironment.execute_with_length_hint", false]], "execute_with_length_hint() (ralsei.connection.jinja.connectionenvironment method)": [[6, "ralsei.connection.jinja.ConnectionEnvironment.execute_with_length_hint", false]], "executescript() (ralsei.connection.connectionext method)": [[3, "ralsei.connection.ConnectionExt.executescript", false]], "executescript() (ralsei.connection.ext.connectionext method)": [[5, "ralsei.connection.ext.ConnectionExt.executescript", false]], "executescript_text() (ralsei.connection.connectionext method)": [[3, "ralsei.connection.ConnectionExt.executescript_text", false]], "executescript_text() (ralsei.connection.ext.connectionext method)": [[5, "ralsei.connection.ext.ConnectionExt.executescript_text", false]], "exists() (ralsei.task.base.task method)": [[27, "ralsei.task.base.Task.exists", false]], "exists() (ralsei.task.base.taskimpl method)": [[27, "ralsei.task.base.TaskImpl.exists", false]], "exists() (ralsei.task.task method)": [[24, "ralsei.task.Task.exists", false]], "exists() (ralsei.task.taskimpl method)": [[24, "ralsei.task.TaskImpl.exists", false]], "expect() (in module ralsei.utils)": [[38, "ralsei.utils.expect", false]], "fn (ralsei.task.map_to_new_columns.maptonewcolumns attribute)": [[30, "ralsei.task.map_to_new_columns.MapToNewColumns.fn", false]], "fn (ralsei.task.map_to_new_columns.ralsei.task.map_to_new_columns.maptonewcolumns.maptonewcolumns attribute)": [[44, "ralsei.task.map_to_new_columns.ralsei.task.map_to_new_columns.MapToNewColumns.MapToNewColumns.fn", false]], "fn (ralsei.task.map_to_new_table.maptonewtable attribute)": [[31, "ralsei.task.map_to_new_table.MapToNewTable.fn", false]], "fn (ralsei.task.map_to_new_table.ralsei.task.map_to_new_table.maptonewtable.maptonewtable attribute)": [[44, "ralsei.task.map_to_new_table.ralsei.task.map_to_new_table.MapToNewTable.MapToNewTable.fn", false]], "fn (ralsei.task.maptonewcolumns attribute)": [[24, "ralsei.task.MapToNewColumns.fn", false]], "fn (ralsei.task.maptonewtable attribute)": [[24, "ralsei.task.MapToNewTable.fn", false]], "folder() (in module ralsei.utils)": [[38, "ralsei.utils.folder", false]], "format() (ralsei.jinja.adapter.sqladapter method)": [[20, "ralsei.jinja.adapter.SqlAdapter.format", false]], "format() (ralsei.jinja.sqladapter method)": [[19, "ralsei.jinja.SqlAdapter.format", false]], "from_input_row() (ralsei.task.rowcontext.rowcontext static method)": [[32, "ralsei.task.rowcontext.RowContext.from_input_row", false]], "from_string() (ralsei.jinja.environment.sqlenvironment method)": [[21, "ralsei.jinja.environment.SqlEnvironment.from_string", false]], "from_string() (ralsei.jinja.interface.isqlenvironment method)": [[22, "ralsei.jinja.interface.ISqlEnvironment.from_string", false]], "from_string() (ralsei.jinja.isqlenvironment method)": [[19, "ralsei.jinja.ISqlEnvironment.from_string", false]], "from_string() (ralsei.jinja.sqlenvironment method)": [[19, "ralsei.jinja.SqlEnvironment.from_string", false]], "from_string() (ralsei.jinja.sqlenvironmentwrapper method)": [[19, "ralsei.jinja.SqlEnvironmentWrapper.from_string", false]], "from_string() (ralsei.jinja.wrapper.sqlenvironmentwrapper method)": [[23, "ralsei.jinja.wrapper.SqlEnvironmentWrapper.from_string", false]], "get_dialect() (in module ralsei.dialect)": [[10, "ralsei.dialect.get_dialect", false]], "get_popped_fields() (in module ralsei.wrappers)": [[39, "ralsei.wrappers.get_popped_fields", false]], "graphviz() (ralsei.graph.dag method)": [[11, "ralsei.graph.DAG.graphviz", false]], "graphviz() (ralsei.graph.dag.dag method)": [[12, "ralsei.graph.dag.DAG.graphviz", false]], "id_fields (ralsei.task.map_to_new_columns.maptonewcolumns attribute)": [[30, "ralsei.task.map_to_new_columns.MapToNewColumns.id_fields", false]], "id_fields (ralsei.task.map_to_new_columns.ralsei.task.map_to_new_columns.maptonewcolumns.maptonewcolumns attribute)": [[44, "ralsei.task.map_to_new_columns.ralsei.task.map_to_new_columns.MapToNewColumns.MapToNewColumns.id_fields", false]], "id_fields (ralsei.task.map_to_new_table.maptonewtable attribute)": [[31, "ralsei.task.map_to_new_table.MapToNewTable.id_fields", false]], "id_fields (ralsei.task.map_to_new_table.ralsei.task.map_to_new_table.maptonewtable.maptonewtable attribute)": [[44, "ralsei.task.map_to_new_table.ralsei.task.map_to_new_table.MapToNewTable.MapToNewTable.id_fields", false]], "id_fields (ralsei.task.maptonewcolumns attribute)": [[24, "ralsei.task.MapToNewColumns.id_fields", false]], "id_fields (ralsei.task.maptonewtable attribute)": [[24, "ralsei.task.MapToNewTable.id_fields", false]], "idcolumn (class in ralsei.types)": [[33, "ralsei.types.IdColumn", false]], "idcolumn (class in ralsei.types.value_column)": [[37, "ralsei.types.value_column.IdColumn", false]], "identifier (class in ralsei.types)": [[33, "ralsei.types.Identifier", false]], "identifier (class in ralsei.types.primitives)": [[35, "ralsei.types.primitives.Identifier", false]], "identifier (in module ralsei-filters)": [[43, "ralsei-filters.identifier", false]], "identifier (ralsei.types.column.columnbase property)": [[34, "ralsei.types.column.ColumnBase.identifier", false]], "identifier (ralsei.types.columnbase property)": [[33, "ralsei.types.ColumnBase.identifier", false]], "identifier (ralsei.types.idcolumn property)": [[33, "ralsei.types.IdColumn.identifier", false]], "identifier (ralsei.types.value_column.idcolumn property)": [[37, "ralsei.types.value_column.IdColumn.identifier", false]], "impl (ralsei.task.base.taskdef attribute)": [[27, "ralsei.task.base.TaskDef.Impl", false]], "impl (ralsei.task.taskdef attribute)": [[24, "ralsei.task.TaskDef.Impl", false]], "into_many() (in module ralsei.wrappers)": [[39, "ralsei.wrappers.into_many", false]], "into_one() (in module ralsei.wrappers)": [[39, "ralsei.wrappers.into_one", false]], "is_done_column (ralsei.task.map_to_new_columns.maptonewcolumns attribute)": [[30, "ralsei.task.map_to_new_columns.MapToNewColumns.is_done_column", false]], "is_done_column (ralsei.task.map_to_new_columns.ralsei.task.map_to_new_columns.maptonewcolumns.maptonewcolumns attribute)": [[44, "ralsei.task.map_to_new_columns.ralsei.task.map_to_new_columns.MapToNewColumns.MapToNewColumns.is_done_column", false]], "is_done_column (ralsei.task.map_to_new_table.maptonewtable attribute)": [[31, "ralsei.task.map_to_new_table.MapToNewTable.is_done_column", false]], "is_done_column (ralsei.task.map_to_new_table.ralsei.task.map_to_new_table.maptonewtable.maptonewtable attribute)": [[44, "ralsei.task.map_to_new_table.ralsei.task.map_to_new_table.MapToNewTable.MapToNewTable.is_done_column", false]], "is_done_column (ralsei.task.maptonewcolumns attribute)": [[24, "ralsei.task.MapToNewColumns.is_done_column", false]], "is_done_column (ralsei.task.maptonewtable attribute)": [[24, "ralsei.task.MapToNewTable.is_done_column", false]], "isqlenvironment (class in ralsei.jinja)": [[19, "ralsei.jinja.ISqlEnvironment", false]], "isqlenvironment (class in ralsei.jinja.interface)": [[22, "ralsei.jinja.interface.ISqlEnvironment", false]], "jinja (ralsei.connection.connectionenvironment attribute)": [[3, "ralsei.connection.ConnectionEnvironment.jinja", false]], "jinja (ralsei.connection.jinja.connectionenvironment attribute)": [[6, "ralsei.connection.jinja.ConnectionEnvironment.jinja", false]], "join() (in module ralsei-filters)": [[43, "ralsei-filters.join", false]], "joiner() (in module ralsei-globals)": [[43, "ralsei-globals.joiner", false]], "locals (ralsei.task.base.taskdef attribute)": [[27, "ralsei.task.base.TaskDef.locals", false]], "locals (ralsei.task.taskdef attribute)": [[24, "ralsei.task.TaskDef.locals", false]], "make_module() (ralsei.jinja.environment.sqltemplate method)": [[21, "ralsei.jinja.environment.SqlTemplate.make_module", false]], "make_module() (ralsei.jinja.sqltemplate method)": [[19, "ralsei.jinja.SqlTemplate.make_module", false]], "maptonewcolumns (class in ralsei.task)": [[24, "ralsei.task.MapToNewColumns", false]], "maptonewcolumns (class in ralsei.task.map_to_new_columns)": [[30, "ralsei.task.map_to_new_columns.MapToNewColumns", false]], "maptonewtable (class in ralsei.task)": [[24, "ralsei.task.MapToNewTable", false]], "maptonewtable (class in ralsei.task.map_to_new_table)": [[31, "ralsei.task.map_to_new_table.MapToNewTable", false]], "module": [[1, "module-ralsei", false], [2, "module-ralsei.app", false], [3, "module-ralsei.connection", false], [4, "module-ralsei.connection.create", false], [5, "module-ralsei.connection.ext", false], [6, "module-ralsei.connection.jinja", false], [7, "module-ralsei.console", false], [8, "module-ralsei.contextmanagers", false], [9, "module-ralsei.db_actions", false], [10, "module-ralsei.dialect", false], [11, "module-ralsei.graph", false], [12, "module-ralsei.graph.dag", false], [13, "module-ralsei.graph.error", false], [14, "module-ralsei.graph.outputof", false], [15, "module-ralsei.graph.path", false], [16, "module-ralsei.graph.pipeline", false], [17, "module-ralsei.graph.resolver_context", false], [18, "module-ralsei.graph.sequence", false], [19, "module-ralsei.jinja", false], [20, "module-ralsei.jinja.adapter", false], [21, "module-ralsei.jinja.environment", false], [22, "module-ralsei.jinja.interface", false], [23, "module-ralsei.jinja.wrapper", false], [24, "module-ralsei.task", false], [25, "module-ralsei.task.add_columns", false], [26, "module-ralsei.task.add_columns_sql", false], [27, "module-ralsei.task.base", false], [28, "module-ralsei.task.create_table", false], [29, "module-ralsei.task.create_table_sql", false], [30, "module-ralsei.task.map_to_new_columns", false], [31, "module-ralsei.task.map_to_new_table", false], [32, "module-ralsei.task.rowcontext", false], [33, "module-ralsei.types", false], [34, "module-ralsei.types.column", false], [35, "module-ralsei.types.primitives", false], [36, "module-ralsei.types.to_sql", false], [37, "module-ralsei.types.value_column", false], [38, "module-ralsei.utils", false], [39, "module-ralsei.wrappers", false]], "multicontextmanager (class in ralsei.contextmanagers)": [[8, "ralsei.contextmanagers.MultiContextManager", false]], "name (ralsei.dialect.sqlitedialectinfo attribute)": [[10, "ralsei.dialect.SqliteDialectInfo.name", false]], "name (ralsei.graph.namedtask property)": [[11, "ralsei.graph.NamedTask.name", false]], "name (ralsei.graph.sequence.namedtask property)": [[18, "ralsei.graph.sequence.NamedTask.name", false]], "name (ralsei.types.column.columnbase attribute)": [[34, "ralsei.types.column.ColumnBase.name", false]], "name (ralsei.types.columnbase attribute)": [[33, "ralsei.types.ColumnBase.name", false]], "name (ralsei.types.idcolumn attribute)": [[33, "ralsei.types.IdColumn.name", false]], "name (ralsei.types.placeholder attribute)": [[33, "ralsei.types.Placeholder.name", false]], "name (ralsei.types.primitives.placeholder attribute)": [[35, "ralsei.types.primitives.Placeholder.name", false]], "name (ralsei.types.primitives.ralsei.types.primitives.placeholder.placeholder attribute)": [[43, "ralsei.types.primitives.ralsei.types.primitives.Placeholder.Placeholder.name", false]], "name (ralsei.types.primitives.ralsei.types.primitives.table.table attribute)": [[43, "ralsei.types.primitives.ralsei.types.primitives.Table.Table.name", false]], "name (ralsei.types.primitives.table attribute)": [[35, "ralsei.types.primitives.Table.name", false]], "name (ralsei.types.table attribute)": [[33, "ralsei.types.Table.name", false]], "name (ralsei.types.value_column.idcolumn attribute)": [[37, "ralsei.types.value_column.IdColumn.name", false]], "namedtask (class in ralsei.graph)": [[11, "ralsei.graph.NamedTask", false]], "namedtask (class in ralsei.graph.sequence)": [[18, "ralsei.graph.sequence.NamedTask", false]], "onetomany (class in ralsei.wrappers)": [[39, "ralsei.wrappers.OneToMany", false]], "onetoone (class in ralsei.wrappers)": [[39, "ralsei.wrappers.OneToOne", false]], "output (ralsei.task.add_columns.addcolumnstask property)": [[25, "ralsei.task.add_columns.AddColumnsTask.output", false]], "output (ralsei.task.addcolumnstask property)": [[24, "ralsei.task.AddColumnsTask.output", false]], "output (ralsei.task.base.task property)": [[27, "ralsei.task.base.Task.output", false]], "output (ralsei.task.create_table.createtabletask property)": [[28, "ralsei.task.create_table.CreateTableTask.output", false]], "output (ralsei.task.createtabletask property)": [[24, "ralsei.task.CreateTableTask.output", false]], "output (ralsei.task.task property)": [[24, "ralsei.task.Task.output", false]], "outputof (class in ralsei.graph)": [[11, "ralsei.graph.OutputOf", false]], "outputof (class in ralsei.graph.outputof)": [[14, "ralsei.graph.outputof.OutputOf", false]], "outputof() (ralsei.graph.pipeline method)": [[11, "ralsei.graph.Pipeline.outputof", false]], "outputof() (ralsei.graph.pipeline.pipeline method)": [[16, "ralsei.graph.pipeline.Pipeline.outputof", false]], "parse() (ralsei.graph.path.treepath static method)": [[15, "ralsei.graph.path.TreePath.parse", false]], "parse() (ralsei.graph.treepath static method)": [[11, "ralsei.graph.TreePath.parse", false]], "path (ralsei.graph.namedtask attribute)": [[11, "ralsei.graph.NamedTask.path", false]], "path (ralsei.graph.sequence.namedtask attribute)": [[18, "ralsei.graph.sequence.NamedTask.path", false]], "pipeline (class in ralsei.graph)": [[11, "ralsei.graph.Pipeline", false]], "pipeline (class in ralsei.graph.pipeline)": [[16, "ralsei.graph.pipeline.Pipeline", false]], "pipeline (ralsei.app.ralsei attribute)": [[2, "ralsei.app.Ralsei.pipeline", false]], "pipeline (ralsei.graph.outputof attribute)": [[11, "ralsei.graph.OutputOf.pipeline", false]], "pipeline (ralsei.graph.outputof.outputof attribute)": [[14, "ralsei.graph.outputof.OutputOf.pipeline", false]], "placeholder (class in ralsei.types)": [[33, "ralsei.types.Placeholder", false]], "placeholder (class in ralsei.types.primitives)": [[35, "ralsei.types.primitives.Placeholder", false]], "pop_id_fields() (in module ralsei.wrappers)": [[39, "ralsei.wrappers.pop_id_fields", false]], "postgresdialectinfo (class in ralsei.dialect)": [[10, "ralsei.dialect.PostgresDialectInfo", false]], "prepare() (ralsei.task.base.taskimpl method)": [[27, "ralsei.task.base.TaskImpl.prepare", false]], "prepare() (ralsei.task.taskimpl method)": [[24, "ralsei.task.TaskImpl.prepare", false]], "ralsei": [[1, "module-ralsei", false]], "ralsei (built-in class)": [[40, "Ralsei", false]], "ralsei (class in ralsei.app)": [[2, "ralsei.app.Ralsei", false]], "ralsei.app": [[2, "module-ralsei.app", false]], "ralsei.connection": [[3, "module-ralsei.connection", false]], "ralsei.connection.create": [[4, "module-ralsei.connection.create", false]], "ralsei.connection.ext": [[5, "module-ralsei.connection.ext", false]], "ralsei.connection.jinja": [[6, "module-ralsei.connection.jinja", false]], "ralsei.console": [[7, "module-ralsei.console", false]], "ralsei.contextmanagers": [[8, "module-ralsei.contextmanagers", false]], "ralsei.db_actions": [[9, "module-ralsei.db_actions", false]], "ralsei.dialect": [[10, "module-ralsei.dialect", false]], "ralsei.graph": [[11, "module-ralsei.graph", false]], "ralsei.graph.dag": [[12, "module-ralsei.graph.dag", false]], "ralsei.graph.error": [[13, "module-ralsei.graph.error", false]], "ralsei.graph.outputof": [[14, "module-ralsei.graph.outputof", false]], "ralsei.graph.path": [[15, "module-ralsei.graph.path", false]], "ralsei.graph.pipeline": [[16, "module-ralsei.graph.pipeline", false]], "ralsei.graph.resolver_context": [[17, "module-ralsei.graph.resolver_context", false]], "ralsei.graph.sequence": [[18, "module-ralsei.graph.sequence", false]], "ralsei.jinja": [[19, "module-ralsei.jinja", false]], "ralsei.jinja.adapter": [[20, "module-ralsei.jinja.adapter", false]], "ralsei.jinja.environment": [[21, "module-ralsei.jinja.environment", false]], "ralsei.jinja.interface": [[22, "module-ralsei.jinja.interface", false]], "ralsei.jinja.wrapper": [[23, "module-ralsei.jinja.wrapper", false]], "ralsei.task": [[24, "module-ralsei.task", false]], "ralsei.task.add_columns": [[25, "module-ralsei.task.add_columns", false]], "ralsei.task.add_columns_sql": [[26, "module-ralsei.task.add_columns_sql", false]], "ralsei.task.add_columns_sql.addcolumnssql.addcolumnssql (class in ralsei.task.add_columns_sql)": [[44, "ralsei.task.add_columns_sql.ralsei.task.add_columns_sql.AddColumnsSql.AddColumnsSql", false]], "ralsei.task.base": [[27, "module-ralsei.task.base", false]], "ralsei.task.create_table": [[28, "module-ralsei.task.create_table", false]], "ralsei.task.create_table_sql": [[29, "module-ralsei.task.create_table_sql", false]], "ralsei.task.create_table_sql.createtablesql.createtablesql (class in ralsei.task.create_table_sql)": [[44, "ralsei.task.create_table_sql.ralsei.task.create_table_sql.CreateTableSql.CreateTableSql", false]], "ralsei.task.map_to_new_columns": [[30, "module-ralsei.task.map_to_new_columns", false]], "ralsei.task.map_to_new_columns.maptonewcolumns.maptonewcolumns (class in ralsei.task.map_to_new_columns)": [[44, "ralsei.task.map_to_new_columns.ralsei.task.map_to_new_columns.MapToNewColumns.MapToNewColumns", false]], "ralsei.task.map_to_new_table": [[31, "module-ralsei.task.map_to_new_table", false]], "ralsei.task.map_to_new_table.maptonewtable.maptonewtable (class in ralsei.task.map_to_new_table)": [[44, "ralsei.task.map_to_new_table.ralsei.task.map_to_new_table.MapToNewTable.MapToNewTable", false]], "ralsei.task.rowcontext": [[32, "module-ralsei.task.rowcontext", false]], "ralsei.types": [[33, "module-ralsei.types", false]], "ralsei.types.column": [[34, "module-ralsei.types.column", false]], "ralsei.types.primitives": [[35, "module-ralsei.types.primitives", false]], "ralsei.types.primitives.identifier.identifier (class in ralsei.types.primitives)": [[43, "ralsei.types.primitives.ralsei.types.primitives.Identifier.Identifier", false]], "ralsei.types.primitives.placeholder.placeholder (class in ralsei.types.primitives)": [[43, "ralsei.types.primitives.ralsei.types.primitives.Placeholder.Placeholder", false]], "ralsei.types.primitives.sql.sql (class in ralsei.types.primitives)": [[43, "ralsei.types.primitives.ralsei.types.primitives.Sql.Sql", false]], "ralsei.types.primitives.table.table (class in ralsei.types.primitives)": [[43, "ralsei.types.primitives.ralsei.types.primitives.Table.Table", false]], "ralsei.types.to_sql": [[36, "module-ralsei.types.to_sql", false]], "ralsei.types.value_column": [[37, "module-ralsei.types.value_column", false]], "ralsei.utils": [[38, "module-ralsei.utils", false]], "ralsei.wrappers": [[39, "module-ralsei.wrappers", false]], "range() (in module ralsei-globals)": [[43, "ralsei-globals.range", false]], "redo() (ralsei.graph.sequence.tasksequence method)": [[18, "ralsei.graph.sequence.TaskSequence.redo", false]], "redo() (ralsei.graph.tasksequence method)": [[11, "ralsei.graph.TaskSequence.redo", false]], "redo() (ralsei.task.base.task method)": [[27, "ralsei.task.base.Task.redo", false]], "redo() (ralsei.task.task method)": [[24, "ralsei.task.Task.redo", false]], "register_dialect() (in module ralsei.dialect)": [[10, "ralsei.dialect.register_dialect", false]], "register_type() (ralsei.jinja.adapter.sqladapter method)": [[20, "ralsei.jinja.adapter.SqlAdapter.register_type", false]], "register_type() (ralsei.jinja.sqladapter method)": [[19, "ralsei.jinja.SqlAdapter.register_type", false]], "relations (ralsei.graph.dag attribute)": [[11, "ralsei.graph.DAG.relations", false]], "relations (ralsei.graph.dag.dag attribute)": [[12, "ralsei.graph.dag.DAG.relations", false]], "relations_str() (ralsei.graph.dag method)": [[11, "ralsei.graph.DAG.relations_str", false]], "relations_str() (ralsei.graph.dag.dag method)": [[12, "ralsei.graph.dag.DAG.relations_str", false]], "rename_input() (in module ralsei.wrappers)": [[39, "ralsei.wrappers.rename_input", false]], "rename_output() (in module ralsei.wrappers)": [[39, "ralsei.wrappers.rename_output", false]], "render() (ralsei.jinja.environment.sqlenvironment method)": [[21, "ralsei.jinja.environment.SqlEnvironment.render", false]], "render() (ralsei.jinja.environment.sqltemplatemodule method)": [[21, "ralsei.jinja.environment.SqlTemplateModule.render", false]], "render() (ralsei.jinja.interface.isqlenvironment method)": [[22, "ralsei.jinja.interface.ISqlEnvironment.render", false]], "render() (ralsei.jinja.isqlenvironment method)": [[19, "ralsei.jinja.ISqlEnvironment.render", false]], "render() (ralsei.jinja.sqlenvironment method)": [[19, "ralsei.jinja.SqlEnvironment.render", false]], "render() (ralsei.jinja.sqlenvironmentwrapper method)": [[19, "ralsei.jinja.SqlEnvironmentWrapper.render", false]], "render() (ralsei.jinja.sqltemplatemodule method)": [[19, "ralsei.jinja.SqlTemplateModule.render", false]], "render() (ralsei.jinja.wrapper.sqlenvironmentwrapper method)": [[23, "ralsei.jinja.wrapper.SqlEnvironmentWrapper.render", false]], "render() (ralsei.types.column method)": [[33, "ralsei.types.Column.render", false]], "render() (ralsei.types.column.column method)": [[34, "ralsei.types.column.Column.render", false]], "render() (ralsei.types.column.columnbase method)": [[34, "ralsei.types.column.ColumnBase.render", false]], "render() (ralsei.types.column.columnrendered method)": [[34, "ralsei.types.column.ColumnRendered.render", false]], "render() (ralsei.types.columnbase method)": [[33, "ralsei.types.ColumnBase.render", false]], "render() (ralsei.types.columnrendered method)": [[33, "ralsei.types.ColumnRendered.render", false]], "render() (ralsei.types.value_column.valuecolumn method)": [[37, "ralsei.types.value_column.ValueColumn.render", false]], "render() (ralsei.types.value_column.valuecolumnbase method)": [[37, "ralsei.types.value_column.ValueColumnBase.render", false]], "render() (ralsei.types.value_column.valuecolumnrendered method)": [[37, "ralsei.types.value_column.ValueColumnRendered.render", false]], "render() (ralsei.types.valuecolumn method)": [[33, "ralsei.types.ValueColumn.render", false]], "render() (ralsei.types.valuecolumnbase method)": [[33, "ralsei.types.ValueColumnBase.render", false]], "render() (ralsei.types.valuecolumnrendered method)": [[33, "ralsei.types.ValueColumnRendered.render", false]], "render_execute() (ralsei.connection.connectionenvironment method)": [[3, "ralsei.connection.ConnectionEnvironment.render_execute", false]], "render_execute() (ralsei.connection.jinja.connectionenvironment method)": [[6, "ralsei.connection.jinja.ConnectionEnvironment.render_execute", false]], "render_executescript() (ralsei.connection.connectionenvironment method)": [[3, "ralsei.connection.ConnectionEnvironment.render_executescript", false]], "render_executescript() (ralsei.connection.jinja.connectionenvironment method)": [[6, "ralsei.connection.jinja.ConnectionEnvironment.render_executescript", false]], "render_split() (ralsei.jinja.environment.sqlenvironment method)": [[21, "ralsei.jinja.environment.SqlEnvironment.render_split", false]], "render_split() (ralsei.jinja.environment.sqltemplate method)": [[21, "ralsei.jinja.environment.SqlTemplate.render_split", false]], "render_split() (ralsei.jinja.environment.sqltemplatemodule method)": [[21, "ralsei.jinja.environment.SqlTemplateModule.render_split", false]], "render_split() (ralsei.jinja.interface.isqlenvironment method)": [[22, "ralsei.jinja.interface.ISqlEnvironment.render_split", false]], "render_split() (ralsei.jinja.isqlenvironment method)": [[19, "ralsei.jinja.ISqlEnvironment.render_split", false]], "render_split() (ralsei.jinja.sqlenvironment method)": [[19, "ralsei.jinja.SqlEnvironment.render_split", false]], "render_split() (ralsei.jinja.sqlenvironmentwrapper method)": [[19, "ralsei.jinja.SqlEnvironmentWrapper.render_split", false]], "render_split() (ralsei.jinja.sqltemplate method)": [[19, "ralsei.jinja.SqlTemplate.render_split", false]], "render_split() (ralsei.jinja.sqltemplatemodule method)": [[19, "ralsei.jinja.SqlTemplateModule.render_split", false]], "render_split() (ralsei.jinja.wrapper.sqlenvironmentwrapper method)": [[23, "ralsei.jinja.wrapper.SqlEnvironmentWrapper.render_split", false]], "render_sql() (ralsei.jinja.environment.sqlenvironment method)": [[21, "ralsei.jinja.environment.SqlEnvironment.render_sql", false]], "render_sql() (ralsei.jinja.environment.sqltemplate method)": [[21, "ralsei.jinja.environment.SqlTemplate.render_sql", false]], "render_sql() (ralsei.jinja.environment.sqltemplatemodule method)": [[21, "ralsei.jinja.environment.SqlTemplateModule.render_sql", false]], "render_sql() (ralsei.jinja.interface.isqlenvironment method)": [[22, "ralsei.jinja.interface.ISqlEnvironment.render_sql", false]], "render_sql() (ralsei.jinja.isqlenvironment method)": [[19, "ralsei.jinja.ISqlEnvironment.render_sql", false]], "render_sql() (ralsei.jinja.sqlenvironment method)": [[19, "ralsei.jinja.SqlEnvironment.render_sql", false]], "render_sql() (ralsei.jinja.sqlenvironmentwrapper method)": [[19, "ralsei.jinja.SqlEnvironmentWrapper.render_sql", false]], "render_sql() (ralsei.jinja.sqltemplate method)": [[19, "ralsei.jinja.SqlTemplate.render_sql", false]], "render_sql() (ralsei.jinja.sqltemplatemodule method)": [[19, "ralsei.jinja.SqlTemplateModule.render_sql", false]], "render_sql() (ralsei.jinja.wrapper.sqlenvironmentwrapper method)": [[23, "ralsei.jinja.wrapper.SqlEnvironmentWrapper.render_sql", false]], "render_sql_split() (ralsei.jinja.environment.sqlenvironment method)": [[21, "ralsei.jinja.environment.SqlEnvironment.render_sql_split", false]], "render_sql_split() (ralsei.jinja.environment.sqltemplate method)": [[21, "ralsei.jinja.environment.SqlTemplate.render_sql_split", false]], "render_sql_split() (ralsei.jinja.environment.sqltemplatemodule method)": [[21, "ralsei.jinja.environment.SqlTemplateModule.render_sql_split", false]], "render_sql_split() (ralsei.jinja.interface.isqlenvironment method)": [[22, "ralsei.jinja.interface.ISqlEnvironment.render_sql_split", false]], "render_sql_split() (ralsei.jinja.isqlenvironment method)": [[19, "ralsei.jinja.ISqlEnvironment.render_sql_split", false]], "render_sql_split() (ralsei.jinja.sqlenvironment method)": [[19, "ralsei.jinja.SqlEnvironment.render_sql_split", false]], "render_sql_split() (ralsei.jinja.sqlenvironmentwrapper method)": [[19, "ralsei.jinja.SqlEnvironmentWrapper.render_sql_split", false]], "render_sql_split() (ralsei.jinja.sqltemplate method)": [[19, "ralsei.jinja.SqlTemplate.render_sql_split", false]], "render_sql_split() (ralsei.jinja.sqltemplatemodule method)": [[19, "ralsei.jinja.SqlTemplateModule.render_sql_split", false]], "render_sql_split() (ralsei.jinja.wrapper.sqlenvironmentwrapper method)": [[23, "ralsei.jinja.wrapper.SqlEnvironmentWrapper.render_sql_split", false]], "resolve() (in module ralsei.graph)": [[11, "ralsei.graph.resolve", false]], "resolve() (in module ralsei.graph.resolver_context)": [[17, "ralsei.graph.resolver_context.resolve", false]], "resolve() (ralsei.task.base.taskimpl method)": [[27, "ralsei.task.base.TaskImpl.resolve", false]], "resolve() (ralsei.task.taskimpl method)": [[24, "ralsei.task.TaskImpl.resolve", false]], "resolvercontexterror": [[11, "ralsei.graph.ResolverContextError", false], [13, "ralsei.graph.error.ResolverContextError", false]], "resolves (class in ralsei.graph)": [[11, "ralsei.graph.Resolves", false]], "resolves (class in ralsei.graph.outputof)": [[14, "ralsei.graph.outputof.Resolves", false]], "reusable_contextmanager() (in module ralsei.contextmanagers)": [[8, "ralsei.contextmanagers.reusable_contextmanager", false]], "reusable_contextmanager_const() (in module ralsei.contextmanagers)": [[8, "ralsei.contextmanagers.reusable_contextmanager_const", false]], "row_context_atrribute (in module ralsei.task)": [[24, "ralsei.task.ROW_CONTEXT_ATRRIBUTE", false]], "row_context_atrribute (in module ralsei.task.rowcontext)": [[32, "ralsei.task.rowcontext.ROW_CONTEXT_ATRRIBUTE", false]], "row_context_var (in module ralsei.task)": [[24, "ralsei.task.ROW_CONTEXT_VAR", false]], "row_context_var (in module ralsei.task.rowcontext)": [[32, "ralsei.task.rowcontext.ROW_CONTEXT_VAR", false]], "rowcontext (class in ralsei.task.rowcontext)": [[32, "ralsei.task.rowcontext.RowContext", false]], "run() (ralsei.graph.sequence.tasksequence method)": [[18, "ralsei.graph.sequence.TaskSequence.run", false]], "run() (ralsei.graph.tasksequence method)": [[11, "ralsei.graph.TaskSequence.run", false]], "run() (ralsei.task.base.task method)": [[27, "ralsei.task.base.Task.run", false]], "run() (ralsei.task.base.taskimpl method)": [[27, "ralsei.task.base.TaskImpl.run", false]], "run() (ralsei.task.task method)": [[24, "ralsei.task.Task.run", false]], "run() (ralsei.task.taskimpl method)": [[24, "ralsei.task.TaskImpl.run", false]], "run_cli() (ralsei.app.ralsei class method)": [[2, "ralsei.app.Ralsei.run_cli", false]], "schema (ralsei.types.primitives.ralsei.types.primitives.table.table attribute)": [[43, "ralsei.types.primitives.ralsei.types.primitives.Table.Table.schema", false]], "schema (ralsei.types.primitives.table attribute)": [[35, "ralsei.types.primitives.Table.schema", false]], "schema (ralsei.types.table attribute)": [[33, "ralsei.types.Table.schema", false]], "scripts() (ralsei.task.base.task method)": [[27, "ralsei.task.base.Task.scripts", false]], "scripts() (ralsei.task.base.taskimpl method)": [[27, "ralsei.task.base.TaskImpl.scripts", false]], "scripts() (ralsei.task.task method)": [[24, "ralsei.task.Task.scripts", false]], "scripts() (ralsei.task.taskimpl method)": [[24, "ralsei.task.TaskImpl.scripts", false]], "select (ralsei.task.map_to_new_columns.maptonewcolumns attribute)": [[30, "ralsei.task.map_to_new_columns.MapToNewColumns.select", false]], "select (ralsei.task.map_to_new_columns.ralsei.task.map_to_new_columns.maptonewcolumns.maptonewcolumns attribute)": [[44, "ralsei.task.map_to_new_columns.ralsei.task.map_to_new_columns.MapToNewColumns.MapToNewColumns.select", false]], "select (ralsei.task.map_to_new_table.maptonewtable attribute)": [[31, "ralsei.task.map_to_new_table.MapToNewTable.select", false]], "select (ralsei.task.map_to_new_table.ralsei.task.map_to_new_table.maptonewtable.maptonewtable attribute)": [[44, "ralsei.task.map_to_new_table.ralsei.task.map_to_new_table.MapToNewTable.MapToNewTable.select", false]], "select (ralsei.task.maptonewcolumns attribute)": [[24, "ralsei.task.MapToNewColumns.select", false]], "select (ralsei.task.maptonewtable attribute)": [[24, "ralsei.task.MapToNewTable.select", false]], "set_statement (ralsei.types.value_column.valuecolumnbase property)": [[37, "ralsei.types.value_column.ValueColumnBase.set_statement", false]], "set_statement (ralsei.types.valuecolumnbase property)": [[33, "ralsei.types.ValueColumnBase.set_statement", false]], "sort_filtered() (ralsei.graph.dag method)": [[11, "ralsei.graph.DAG.sort_filtered", false]], "sort_filtered() (ralsei.graph.dag.dag method)": [[12, "ralsei.graph.dag.DAG.sort_filtered", false]], "source_table (ralsei.task.map_to_new_table.maptonewtable attribute)": [[31, "ralsei.task.map_to_new_table.MapToNewTable.source_table", false]], "source_table (ralsei.task.map_to_new_table.ralsei.task.map_to_new_table.maptonewtable.maptonewtable attribute)": [[44, "ralsei.task.map_to_new_table.ralsei.task.map_to_new_table.MapToNewTable.MapToNewTable.source_table", false]], "source_table (ralsei.task.maptonewtable attribute)": [[24, "ralsei.task.MapToNewTable.source_table", false]], "sql (class in ralsei.types)": [[33, "ralsei.types.Sql", false]], "sql (class in ralsei.types.primitives)": [[35, "ralsei.types.primitives.Sql", false]], "sql (in module ralsei-filters)": [[43, "ralsei-filters.sql", false]], "sql (ralsei.task.add_columns_sql.addcolumnssql attribute)": [[26, "ralsei.task.add_columns_sql.AddColumnsSql.sql", false]], "sql (ralsei.task.add_columns_sql.ralsei.task.add_columns_sql.addcolumnssql.addcolumnssql attribute)": [[44, "ralsei.task.add_columns_sql.ralsei.task.add_columns_sql.AddColumnsSql.AddColumnsSql.sql", false]], "sql (ralsei.task.addcolumnssql attribute)": [[24, "ralsei.task.AddColumnsSql.sql", false]], "sql (ralsei.task.create_table_sql.createtablesql attribute)": [[29, "ralsei.task.create_table_sql.CreateTableSql.sql", false]], "sql (ralsei.task.create_table_sql.ralsei.task.create_table_sql.createtablesql.createtablesql attribute)": [[44, "ralsei.task.create_table_sql.ralsei.task.create_table_sql.CreateTableSql.CreateTableSql.sql", false]], "sql (ralsei.task.createtablesql attribute)": [[24, "ralsei.task.CreateTableSql.sql", false]], "sqladapter (class in ralsei.jinja)": [[19, "ralsei.jinja.SqlAdapter", false]], "sqladapter (class in ralsei.jinja.adapter)": [[20, "ralsei.jinja.adapter.SqlAdapter", false]], "sqlalchemy (ralsei.connection.connectionenvironment attribute)": [[3, "ralsei.connection.ConnectionEnvironment.sqlalchemy", false]], "sqlalchemy (ralsei.connection.jinja.connectionenvironment attribute)": [[6, "ralsei.connection.jinja.ConnectionEnvironment.sqlalchemy", false]], "sqlenvironment (class in ralsei.jinja)": [[19, "ralsei.jinja.SqlEnvironment", false]], "sqlenvironment (class in ralsei.jinja.environment)": [[21, "ralsei.jinja.environment.SqlEnvironment", false]], "sqlenvironmentwrapper (class in ralsei.jinja)": [[19, "ralsei.jinja.SqlEnvironmentWrapper", false]], "sqlenvironmentwrapper (class in ralsei.jinja.wrapper)": [[23, "ralsei.jinja.wrapper.SqlEnvironmentWrapper", false]], "sqlitedialectinfo (class in ralsei.dialect)": [[10, "ralsei.dialect.SqliteDialectInfo", false]], "sqltemplate (class in ralsei.jinja)": [[19, "ralsei.jinja.SqlTemplate", false]], "sqltemplate (class in ralsei.jinja.environment)": [[21, "ralsei.jinja.environment.SqlTemplate", false]], "sqltemplatemodule (class in ralsei.jinja)": [[19, "ralsei.jinja.SqlTemplateModule", false]], "sqltemplatemodule (class in ralsei.jinja.environment)": [[21, "ralsei.jinja.environment.SqlTemplateModule", false]], "supports_column_if_not_exists (ralsei.dialect.basedialectinfo attribute)": [[10, "ralsei.dialect.BaseDialectInfo.supports_column_if_not_exists", false]], "supports_column_if_not_exists (ralsei.dialect.sqlitedialectinfo attribute)": [[10, "ralsei.dialect.SqliteDialectInfo.supports_column_if_not_exists", false]], "supports_rowcount (ralsei.dialect.basedialectinfo attribute)": [[10, "ralsei.dialect.BaseDialectInfo.supports_rowcount", false]], "supports_rowcount (ralsei.dialect.sqlitedialectinfo attribute)": [[10, "ralsei.dialect.SqliteDialectInfo.supports_rowcount", false]], "table (class in ralsei.types)": [[33, "ralsei.types.Table", false]], "table (class in ralsei.types.primitives)": [[35, "ralsei.types.primitives.Table", false]], "table (ralsei.task.add_columns_sql.addcolumnssql attribute)": [[26, "ralsei.task.add_columns_sql.AddColumnsSql.table", false]], "table (ralsei.task.add_columns_sql.ralsei.task.add_columns_sql.addcolumnssql.addcolumnssql attribute)": [[44, "ralsei.task.add_columns_sql.ralsei.task.add_columns_sql.AddColumnsSql.AddColumnsSql.table", false]], "table (ralsei.task.addcolumnssql attribute)": [[24, "ralsei.task.AddColumnsSql.table", false]], "table (ralsei.task.create_table_sql.createtablesql attribute)": [[29, "ralsei.task.create_table_sql.CreateTableSql.table", false]], "table (ralsei.task.create_table_sql.ralsei.task.create_table_sql.createtablesql.createtablesql attribute)": [[44, "ralsei.task.create_table_sql.ralsei.task.create_table_sql.CreateTableSql.CreateTableSql.table", false]], "table (ralsei.task.createtablesql attribute)": [[24, "ralsei.task.CreateTableSql.table", false]], "table (ralsei.task.map_to_new_columns.maptonewcolumns attribute)": [[30, "ralsei.task.map_to_new_columns.MapToNewColumns.table", false]], "table (ralsei.task.map_to_new_columns.ralsei.task.map_to_new_columns.maptonewcolumns.maptonewcolumns attribute)": [[44, "ralsei.task.map_to_new_columns.ralsei.task.map_to_new_columns.MapToNewColumns.MapToNewColumns.table", false]], "table (ralsei.task.map_to_new_table.maptonewtable attribute)": [[31, "ralsei.task.map_to_new_table.MapToNewTable.table", false]], "table (ralsei.task.map_to_new_table.ralsei.task.map_to_new_table.maptonewtable.maptonewtable attribute)": [[44, "ralsei.task.map_to_new_table.ralsei.task.map_to_new_table.MapToNewTable.MapToNewTable.table", false]], "table (ralsei.task.maptonewcolumns attribute)": [[24, "ralsei.task.MapToNewColumns.table", false]], "table (ralsei.task.maptonewtable attribute)": [[24, "ralsei.task.MapToNewTable.table", false]], "table_exists() (in module ralsei.db_actions)": [[9, "ralsei.db_actions.table_exists", false]], "task (class in ralsei.task)": [[24, "ralsei.task.Task", false]], "task (class in ralsei.task.base)": [[27, "ralsei.task.base.Task", false]], "task (ralsei.graph.namedtask attribute)": [[11, "ralsei.graph.NamedTask.task", false]], "task (ralsei.graph.sequence.namedtask attribute)": [[18, "ralsei.graph.sequence.NamedTask.task", false]], "task_paths (ralsei.graph.outputof attribute)": [[11, "ralsei.graph.OutputOf.task_paths", false]], "task_paths (ralsei.graph.outputof.outputof attribute)": [[14, "ralsei.graph.outputof.OutputOf.task_paths", false]], "taskdef (class in ralsei.task)": [[24, "ralsei.task.TaskDef", false]], "taskdef (class in ralsei.task.base)": [[27, "ralsei.task.base.TaskDef", false]], "taskimpl (class in ralsei.task)": [[24, "ralsei.task.TaskImpl", false]], "taskimpl (class in ralsei.task.base)": [[27, "ralsei.task.base.TaskImpl", false]], "tasks (class in ralsei.graph)": [[11, "ralsei.graph.Tasks", false]], "tasks (class in ralsei.graph.pipeline)": [[16, "ralsei.graph.pipeline.Tasks", false]], "tasks (ralsei.graph.dag attribute)": [[11, "ralsei.graph.DAG.tasks", false]], "tasks (ralsei.graph.dag.dag attribute)": [[12, "ralsei.graph.dag.DAG.tasks", false]], "tasks_str() (ralsei.graph.dag method)": [[11, "ralsei.graph.DAG.tasks_str", false]], "tasks_str() (ralsei.graph.dag.dag method)": [[12, "ralsei.graph.dag.DAG.tasks_str", false]], "tasksequence (class in ralsei.graph)": [[11, "ralsei.graph.TaskSequence", false]], "tasksequence (class in ralsei.graph.sequence)": [[18, "ralsei.graph.sequence.TaskSequence", false]], "to_sql() (ralsei.jinja.adapter.sqladapter method)": [[20, "ralsei.jinja.adapter.SqlAdapter.to_sql", false]], "to_sql() (ralsei.jinja.sqladapter method)": [[19, "ralsei.jinja.SqlAdapter.to_sql", false]], "to_sql() (ralsei.types.column.columndefinition method)": [[34, "ralsei.types.column.ColumnDefinition.to_sql", false]], "to_sql() (ralsei.types.columndefinition method)": [[33, "ralsei.types.ColumnDefinition.to_sql", false]], "to_sql() (ralsei.types.idcolumn method)": [[33, "ralsei.types.IdColumn.to_sql", false]], "to_sql() (ralsei.types.identifier method)": [[33, "ralsei.types.Identifier.to_sql", false]], "to_sql() (ralsei.types.placeholder method)": [[33, "ralsei.types.Placeholder.to_sql", false]], "to_sql() (ralsei.types.primitives.identifier method)": [[35, "ralsei.types.primitives.Identifier.to_sql", false]], "to_sql() (ralsei.types.primitives.placeholder method)": [[35, "ralsei.types.primitives.Placeholder.to_sql", false]], "to_sql() (ralsei.types.primitives.ralsei.types.primitives.identifier.identifier method)": [[43, "ralsei.types.primitives.ralsei.types.primitives.Identifier.Identifier.to_sql", false]], "to_sql() (ralsei.types.primitives.ralsei.types.primitives.placeholder.placeholder method)": [[43, "ralsei.types.primitives.ralsei.types.primitives.Placeholder.Placeholder.to_sql", false]], "to_sql() (ralsei.types.primitives.ralsei.types.primitives.sql.sql method)": [[43, "ralsei.types.primitives.ralsei.types.primitives.Sql.Sql.to_sql", false]], "to_sql() (ralsei.types.primitives.ralsei.types.primitives.table.table method)": [[43, "ralsei.types.primitives.ralsei.types.primitives.Table.Table.to_sql", false]], "to_sql() (ralsei.types.primitives.sql method)": [[35, "ralsei.types.primitives.Sql.to_sql", false]], "to_sql() (ralsei.types.primitives.table method)": [[35, "ralsei.types.primitives.Table.to_sql", false]], "to_sql() (ralsei.types.sql method)": [[33, "ralsei.types.Sql.to_sql", false]], "to_sql() (ralsei.types.table method)": [[33, "ralsei.types.Table.to_sql", false]], "to_sql() (ralsei.types.to_sql.tosql method)": [[36, "ralsei.types.to_sql.ToSql.to_sql", false]], "to_sql() (ralsei.types.tosql method)": [[33, "ralsei.types.ToSql.to_sql", false]], "to_sql() (ralsei.types.value_column.idcolumn method)": [[37, "ralsei.types.value_column.IdColumn.to_sql", false]], "to_sql() (ralsei.types.value_column.valuecolumnsetstatement method)": [[37, "ralsei.types.value_column.ValueColumnSetStatement.to_sql", false]], "to_sql() (ralsei.types.valuecolumnsetstatement method)": [[33, "ralsei.types.ValueColumnSetStatement.to_sql", false]], "topological_sort() (ralsei.graph.dag method)": [[11, "ralsei.graph.DAG.topological_sort", false]], "topological_sort() (ralsei.graph.dag.dag method)": [[12, "ralsei.graph.dag.DAG.topological_sort", false]], "tosql (class in ralsei.types)": [[33, "ralsei.types.ToSql", false]], "tosql (class in ralsei.types.to_sql)": [[36, "ralsei.types.to_sql.ToSql", false]], "track() (in module ralsei.console)": [[7, "ralsei.console.track", false]], "treepath (class in ralsei.graph)": [[11, "ralsei.graph.TreePath", false]], "treepath (class in ralsei.graph.path)": [[15, "ralsei.graph.path.TreePath", false]], "type (ralsei.types.column.columnrendered attribute)": [[34, "ralsei.types.column.ColumnRendered.type", false]], "type (ralsei.types.columnrendered attribute)": [[33, "ralsei.types.ColumnRendered.type", false]], "value (ralsei.types.idcolumn attribute)": [[33, "ralsei.types.IdColumn.value", false]], "value (ralsei.types.identifier attribute)": [[33, "ralsei.types.Identifier.value", false]], "value (ralsei.types.primitives.identifier attribute)": [[35, "ralsei.types.primitives.Identifier.value", false]], "value (ralsei.types.primitives.ralsei.types.primitives.identifier.identifier attribute)": [[43, "ralsei.types.primitives.ralsei.types.primitives.Identifier.Identifier.value", false]], "value (ralsei.types.primitives.ralsei.types.primitives.sql.sql attribute)": [[43, "ralsei.types.primitives.ralsei.types.primitives.Sql.Sql.value", false]], "value (ralsei.types.primitives.sql attribute)": [[35, "ralsei.types.primitives.Sql.value", false]], "value (ralsei.types.sql attribute)": [[33, "ralsei.types.Sql.value", false]], "value (ralsei.types.value_column.idcolumn attribute)": [[37, "ralsei.types.value_column.IdColumn.value", false]], "value (ralsei.types.value_column.valuecolumnbase attribute)": [[37, "ralsei.types.value_column.ValueColumnBase.value", false]], "value (ralsei.types.valuecolumnbase attribute)": [[33, "ralsei.types.ValueColumnBase.value", false]], "value_column (ralsei.types.value_column.valuecolumnsetstatement attribute)": [[37, "ralsei.types.value_column.ValueColumnSetStatement.value_column", false]], "value_column (ralsei.types.valuecolumnsetstatement attribute)": [[33, "ralsei.types.ValueColumnSetStatement.value_column", false]], "valuecolumn (class in ralsei.types)": [[33, "ralsei.types.ValueColumn", false]], "valuecolumn (class in ralsei.types.value_column)": [[37, "ralsei.types.value_column.ValueColumn", false]], "valuecolumnbase (class in ralsei.types)": [[33, "ralsei.types.ValueColumnBase", false]], "valuecolumnbase (class in ralsei.types.value_column)": [[37, "ralsei.types.value_column.ValueColumnBase", false]], "valuecolumnrendered (class in ralsei.types)": [[33, "ralsei.types.ValueColumnRendered", false]], "valuecolumnrendered (class in ralsei.types.value_column)": [[37, "ralsei.types.value_column.ValueColumnRendered", false]], "valuecolumnsetstatement (class in ralsei.types)": [[33, "ralsei.types.ValueColumnSetStatement", false]], "valuecolumnsetstatement (class in ralsei.types.value_column)": [[37, "ralsei.types.value_column.ValueColumnSetStatement", false]], "view (ralsei.task.create_table_sql.createtablesql attribute)": [[29, "ralsei.task.create_table_sql.CreateTableSql.view", false]], "view (ralsei.task.create_table_sql.ralsei.task.create_table_sql.createtablesql.createtablesql attribute)": [[44, "ralsei.task.create_table_sql.ralsei.task.create_table_sql.CreateTableSql.CreateTableSql.view", false]], "view (ralsei.task.createtablesql attribute)": [[24, "ralsei.task.CreateTableSql.view", false]]}, "objects": {"": [[40, 0, 1, 0, "Ralsei", "The pipeline-running CLI application"], [1, 2, 0, 1, "ralsei", ""]], "Ralsei.__init__": [[40, 1, 2, 0, "pipeline", "The CLI does not give you the pipeline, you must create one in your subclass and pass it to super().__init__()"], [40, 1, 2, 0, "url", "When the class constructor is called by the CLI, the URL is provided as the first argument"]], "ralsei": [[1, 3, 1, 0, "__all__", ""], [2, 2, 0, 1, "app", ""], [3, 2, 0, 1, "connection", ""], [7, 2, 0, 1, "console", ""], [8, 2, 0, 1, "contextmanagers", ""], [9, 2, 0, 1, "db_actions", ""], [10, 2, 0, 1, "dialect", ""], [11, 2, 0, 1, "graph", ""], [19, 2, 0, 1, "jinja", ""], [24, 2, 0, 1, "task", ""], [33, 2, 0, 1, "types", ""], [38, 2, 0, 1, "utils", ""], [39, 2, 0, 1, "wrappers", ""]], "ralsei-filters": [[43, 3, 1, 0, "identifier", "Treat string as identifier"], [43, 4, 1, 0, "join", "Like jinja-filters.join(), but outputs raw Sql"], [43, 3, 1, 0, "sql", "Treat string as raw SQL"]], "ralsei-globals": [[43, 3, 1, 0, "Column", "The column class, used in AddColumnsSql templates"], [43, 3, 1, 0, "dialect", "The current dialect"], [43, 4, 1, 0, "dict", "Same as jinja-globals.dict()"], [43, 4, 1, 0, "joiner", "Like jinja-globals.joiner, but outputs raw Sql"], [43, 4, 1, 0, "range", "Same as jinja-globals.range()"]], "ralsei.app": [[2, 0, 1, 0, "Ralsei", "The pipeline-running CLI application"]], "ralsei.app.Ralsei": [[2, 5, 1, 0, "_create_engine", "Override this to customize engine creation"], [2, 5, 1, 0, "_on_connect", "Run custom code after database connection"], [2, 5, 1, 0, "_prepare_env", "Here you can add your own filters/globals to the jinja environment"], [2, 5, 1, 0, "build_cli", "Create a click CLI based on this class"], [2, 5, 1, 0, "connect", "Creates a new connection, returns connection + jinja env"], [2, 6, 1, 0, "dag", ""], [2, 6, 1, 0, "engine", ""], [2, 6, 1, 0, "env", ""], [2, 6, 1, 0, "pipeline", ""], [2, 5, 1, 0, "run_cli", "Build and run click CLI, print traceback in case of exception"]], "ralsei.app.Ralsei.__init__": [[2, 1, 2, 0, "pipeline", "The CLI does not give you the pipeline, you must create one in your subclass and pass it to super().__init__()"], [2, 1, 2, 0, "url", "When the class constructor is called by the CLI, the URL is provided as the first argument"]], "ralsei.connection": [[3, 0, 1, 0, "ConnectionEnvironment", "Combines of a database connection with a jinja sql environment,"], [3, 0, 1, 0, "ConnectionExt", "Bases: sqlalchemy.engine.Connection"], [4, 2, 0, 1, "create", ""], [3, 4, 1, 0, "create_engine", "Wrapper around sqlalchemy.create_engine()"], [5, 2, 0, 1, "ext", ""], [6, 2, 0, 1, "jinja", ""]], "ralsei.connection.ConnectionEnvironment": [[3, 5, 1, 0, "__enter__", ""], [3, 5, 1, 0, "__exit__", ""], [3, 7, 1, 0, "dialect_info", "Quick access to jinja environment's DialectInfo"], [3, 5, 1, 0, "execute_with_length_hint", "Execute a sql expression, returning an object with a object.__length_hint__() method, letting you see the estimated number or rows."], [3, 6, 1, 0, "jinja", ""], [3, 5, 1, 0, "render_execute", "Render and execute jinja SQL template"], [3, 5, 1, 0, "render_executescript", "Render and execute multiple SQL statements"], [3, 6, 1, 0, "sqlalchemy", ""]], "ralsei.connection.ConnectionEnvironment.__init__": [[3, 1, 2, 0, "env", "if not provided, a new environment will be created from the engine's dialect"], [3, 1, 2, 0, "sqlalchemy_conn", "use exsisting connection or create a new one from engine"]], "ralsei.connection.ConnectionEnvironment.render_execute": [[3, 1, 2, 0, "bind_params", "sql bind parameters (see sqlalchemy.engine.Connection.execute() )"], [3, 1, 2, 0, "source", "sql template"], [3, 1, 2, 0, "template_params", "jinja template parameters"]], "ralsei.connection.ConnectionEnvironment.render_executescript": [[3, 1, 2, 0, "bind_params", "sql bind parameters"], [3, 1, 2, 0, "source", "list of sql statements br or a single template with statements separated by {%split%} tag"], [3, 1, 2, 0, "template_params", "jinja template parameters"]], "ralsei.connection.ConnectionExt": [[3, 5, 1, 0, "__enter__", ""], [3, 5, 1, 0, "execute_text", "Execute a sql string"], [3, 5, 1, 0, "executescript", "Execute a series of statements, similar to sqlite's executescript"], [3, 5, 1, 0, "executescript_text", "Execute a series of string statements, similar to sqlite's executescript"]], "ralsei.connection.create": [[4, 4, 1, 0, "create_engine", "Wrapper around sqlalchemy.create_engine()"]], "ralsei.connection.ext": [[5, 0, 1, 0, "ConnectionExt", "Bases: sqlalchemy.engine.Connection"]], "ralsei.connection.ext.ConnectionExt": [[5, 5, 1, 0, "__enter__", ""], [5, 5, 1, 0, "execute_text", "Execute a sql string"], [5, 5, 1, 0, "executescript", "Execute a series of statements, similar to sqlite's executescript"], [5, 5, 1, 0, "executescript_text", "Execute a series of string statements, similar to sqlite's executescript"]], "ralsei.connection.jinja": [[6, 0, 1, 0, "ConnectionEnvironment", "Combines of a database connection with a jinja sql environment,"]], "ralsei.connection.jinja.ConnectionEnvironment": [[6, 5, 1, 0, "__enter__", ""], [6, 5, 1, 0, "__exit__", ""], [6, 7, 1, 0, "dialect_info", "Quick access to jinja environment's DialectInfo"], [6, 5, 1, 0, "execute_with_length_hint", "Execute a sql expression, returning an object with a object.__length_hint__() method, letting you see the estimated number or rows."], [6, 6, 1, 0, "jinja", ""], [6, 5, 1, 0, "render_execute", "Render and execute jinja SQL template"], [6, 5, 1, 0, "render_executescript", "Render and execute multiple SQL statements"], [6, 6, 1, 0, "sqlalchemy", ""]], "ralsei.connection.jinja.ConnectionEnvironment.__init__": [[6, 1, 2, 0, "env", "if not provided, a new environment will be created from the engine's dialect"], [6, 1, 2, 0, "sqlalchemy_conn", "use exsisting connection or create a new one from engine"]], "ralsei.connection.jinja.ConnectionEnvironment.render_execute": [[6, 1, 2, 0, "bind_params", "sql bind parameters (see sqlalchemy.engine.Connection.execute() )"], [6, 1, 2, 0, "source", "sql template"], [6, 1, 2, 0, "template_params", "jinja template parameters"]], "ralsei.connection.jinja.ConnectionEnvironment.render_executescript": [[6, 1, 2, 0, "bind_params", "sql bind parameters"], [6, 1, 2, 0, "source", "list of sql statements br or a single template with statements separated by {%split%} tag"], [6, 1, 2, 0, "template_params", "jinja template parameters"]], "ralsei.console": [[7, 3, 1, 0, "console", "Rich console used for logging"], [7, 4, 1, 0, "track", "Track progress by iterating over a sequence."]], "ralsei.console.track": [[7, 1, 2, 0, "description", "Description of the task"], [7, 1, 2, 0, "sequence", "A sequence of values you want to iterate over and track progress."], [7, 1, 2, 0, "total", "Total number of steps. Default is length_hint(sequence)"]], "ralsei.contextmanagers": [[8, 0, 1, 0, "ContextManager", "Bases: typing.Protocol"], [8, 0, 1, 0, "MultiContextManager", "Makes a dictionary of context managers act as a single context manager"], [8, 4, 1, 0, "reusable_contextmanager", "like contextlib.contextmanager(), but can be entered multiple times"], [8, 4, 1, 0, "reusable_contextmanager_const", "Like ralsei.contextmanagers.reusable_contextmanager(), but used without invocation"]], "ralsei.contextmanagers.ContextManager": [[8, 5, 1, 0, "__enter__", ""], [8, 5, 1, 0, "__exit__", ""]], "ralsei.contextmanagers.MultiContextManager": [[8, 5, 1, 0, "__enter__", ""], [8, 5, 1, 0, "__exit__", ""]], "ralsei.db_actions": [[9, 0, 1, 0, "AddColumns", "Action for adding columns to a table"], [9, 0, 1, 0, "DropColumns", "Action for dropping columns from a table"], [9, 4, 1, 0, "columns_exist", "Check if all columns exist on a table"], [9, 4, 1, 0, "table_exists", "Check if table exists"]], "ralsei.db_actions.AddColumns": [[9, 5, 1, 0, "__call__", "Execute action"], [9, 5, 1, 0, "__str__", ""]], "ralsei.db_actions.AddColumns.__init__": [[9, 1, 2, 0, "columns", "columns to add"], [9, 1, 2, 0, "env", "jinja environment"], [9, 1, 2, 0, "if_not_exists", "use IF NOT EXISTS check"], [9, 1, 2, 0, "table", "target table"]], "ralsei.db_actions.DropColumns": [[9, 5, 1, 0, "__call__", "Execute action"], [9, 5, 1, 0, "__str__", ""]], "ralsei.db_actions.DropColumns.__init__": [[9, 1, 2, 0, "columns", "columns to drop"], [9, 1, 2, 0, "env", "jinja environment"], [9, 1, 2, 0, "if_exists", "use IF EXISTS check"], [9, 1, 2, 0, "table", "target table"]], "ralsei.dialect": [[10, 0, 1, 0, "BaseDialectInfo", "SQL dialect settings"], [10, 0, 1, 0, "DialectInfo", "You can use both a class instance or a class as dialect"], [10, 0, 1, 0, "PostgresDialectInfo", "Bases: ralsei.dialect.BaseDialectInfo"], [10, 0, 1, 0, "SqliteDialectInfo", "Bases: ralsei.dialect.BaseDialectInfo"], [10, 4, 1, 0, "get_dialect", "Get DialectInfo for a given sqlalchemy dialect name"], [10, 4, 1, 0, "register_dialect", "Decorator for registering a custom dialect"]], "ralsei.dialect.BaseDialectInfo": [[10, 6, 1, 0, "autoincrement_key", ""], [10, 6, 1, 0, "supports_column_if_not_exists", ""], [10, 6, 1, 0, "supports_rowcount", ""]], "ralsei.dialect.SqliteDialectInfo": [[10, 6, 1, 0, "autoincrement_key", ""], [10, 6, 1, 0, "name", ""], [10, 6, 1, 0, "supports_column_if_not_exists", ""], [10, 6, 1, 0, "supports_rowcount", ""]], "ralsei.graph": [[11, 8, 1, 0, "CyclicGraphError", "Bases: RuntimeError"], [11, 0, 1, 0, "DAG", "A graph of tasks"], [11, 0, 1, 0, "NamedTask", "Name and task pair"], [11, 0, 1, 0, "OutputOf", "Stores the relative path from the root of the pipeline to be resolved later"], [11, 0, 1, 0, "Pipeline", "Bases: abc.ABC"], [11, 8, 1, 0, "ResolverContextError", "Bases: RuntimeError"], [11, 0, 1, 0, "Resolves", "Either the value T or the OutputOf that resolves to that value"], [11, 0, 1, 0, "TaskSequence", "An executable sequence of tasks"], [11, 0, 1, 0, "Tasks", "A dictionary with task name to value pairs, used to define a Pipeline"], [11, 0, 1, 0, "TreePath", "Bases: tuple[str, ]"], [12, 2, 0, 1, "dag", ""], [13, 2, 0, 1, "error", ""], [14, 2, 0, 1, "outputof", ""], [15, 2, 0, 1, "path", ""], [16, 2, 0, 1, "pipeline", ""], [11, 4, 1, 0, "resolve", "If value is ralsei.graph.OutputOf, resolve it. Otherwise, returns value"], [17, 2, 0, 1, "resolver_context", ""], [18, 2, 0, 1, "sequence", ""]], "ralsei.graph.DAG": [[11, 5, 1, 0, "graphviz", "Generate graphviz diagram"], [11, 6, 1, 0, "relations", "from -> to relations (left task is executed first)"], [11, 5, 1, 0, "relations_str", ""], [11, 5, 1, 0, "sort_filtered", "Perform topological sort and apply a set of filters. See example in the CLI section."], [11, 6, 1, 0, "tasks", "All tasks by name"], [11, 5, 1, 0, "tasks_str", ""], [11, 5, 1, 0, "topological_sort", "Topological sort"]], "ralsei.graph.DAG.sort_filtered": [[11, 1, 2, 0, "from_filters", "same as --from in the CLI, means \"this task and its descendants\""], [11, 1, 2, 0, "single_filters", "same as --one in the CLI, means \"only this task\""]], "ralsei.graph.DAG.topological_sort": [[11, 1, 2, 0, "constrain_starting_nodes", "If set, will filter out everything except these nodes and their descendants. Otherwise, perform topological sort on the whole graph"]], "ralsei.graph.NamedTask": [[11, 7, 1, 0, "name", "path as a string"], [11, 6, 1, 0, "path", ""], [11, 6, 1, 0, "task", ""]], "ralsei.graph.OutputOf": [[11, 5, 1, 0, "__post_init__", ""], [11, 6, 1, 0, "pipeline", ""], [11, 6, 1, 0, "task_paths", "More than one path is permitted, but but all tasks must have the same output. This is useful when depending on multiple AddColumnsSql tasks if both sets of columns are required"]], "ralsei.graph.Pipeline": [[11, 5, 1, 0, "build_dag", "Resolve dependencies and generate a graph of tasks"], [11, 5, 1, 0, "create_tasks", "A dictionary with task name to value pairs, where the value can be:"], [11, 5, 1, 0, "outputof", "Refer to the output of another task from this pipeline, that will later be resolved."]], "ralsei.graph.Pipeline.outputof": [[11, 1, 2, 0, "task_paths", "path from the root of the pipeline, either a string separated with . or a TreePath object"]], "ralsei.graph.TaskSequence": [[11, 5, 1, 0, "delete", "Delete, committing after each successful task"], [11, 5, 1, 0, "redo", "delete() + run()"], [11, 5, 1, 0, "run", "Run, committing after each successful task"]], "ralsei.graph.TreePath": [[11, 5, 1, 0, "__new__", "path elements, cannot contain ."], [11, 5, 1, 0, "__repr__", ""], [11, 5, 1, 0, "__str__", ""], [11, 5, 1, 0, "parse", "Parse from a . separated string"]], "ralsei.graph.TreePath.__new__": [[11, 1, 2, 0, "parts", "path elements, cannot contain ."]], "ralsei.graph.dag": [[12, 0, 1, 0, "DAG", "A graph of tasks"]], "ralsei.graph.dag.DAG": [[12, 5, 1, 0, "graphviz", "Generate graphviz diagram"], [12, 6, 1, 0, "relations", "from -> to relations (left task is executed first)"], [12, 5, 1, 0, "relations_str", ""], [12, 5, 1, 0, "sort_filtered", "Perform topological sort and apply a set of filters. See example in the CLI section."], [12, 6, 1, 0, "tasks", "All tasks by name"], [12, 5, 1, 0, "tasks_str", ""], [12, 5, 1, 0, "topological_sort", "Topological sort"]], "ralsei.graph.dag.DAG.sort_filtered": [[12, 1, 2, 0, "from_filters", "same as --from in the CLI, means \"this task and its descendants\""], [12, 1, 2, 0, "single_filters", "same as --one in the CLI, means \"only this task\""]], "ralsei.graph.dag.DAG.topological_sort": [[12, 1, 2, 0, "constrain_starting_nodes", "If set, will filter out everything except these nodes and their descendants. Otherwise, perform topological sort on the whole graph"]], "ralsei.graph.error": [[13, 8, 1, 0, "CyclicGraphError", "Bases: RuntimeError"], [13, 8, 1, 0, "ResolverContextError", "Bases: RuntimeError"]], "ralsei.graph.outputof": [[14, 0, 1, 0, "OutputOf", "Stores the relative path from the root of the pipeline to be resolved later"], [14, 0, 1, 0, "Resolves", "Either the value T or the OutputOf that resolves to that value"]], "ralsei.graph.outputof.OutputOf": [[14, 5, 1, 0, "__post_init__", ""], [14, 6, 1, 0, "pipeline", ""], [14, 6, 1, 0, "task_paths", "More than one path is permitted, but but all tasks must have the same output. This is useful when depending on multiple AddColumnsSql tasks if both sets of columns are required"]], "ralsei.graph.path": [[15, 0, 1, 0, "TreePath", "Bases: tuple[str, ]"]], "ralsei.graph.path.TreePath": [[15, 5, 1, 0, "__new__", "path elements, cannot contain ."], [15, 5, 1, 0, "__repr__", ""], [15, 5, 1, 0, "__str__", ""], [15, 5, 1, 0, "parse", "Parse from a . separated string"]], "ralsei.graph.path.TreePath.__new__": [[15, 1, 2, 0, "parts", "path elements, cannot contain ."]], "ralsei.graph.pipeline": [[16, 0, 1, 0, "Pipeline", "Bases: abc.ABC"], [16, 0, 1, 0, "Tasks", "A dictionary with task name to value pairs, used to define a Pipeline"]], "ralsei.graph.pipeline.Pipeline": [[16, 5, 1, 0, "build_dag", "Resolve dependencies and generate a graph of tasks"], [16, 5, 1, 0, "create_tasks", "A dictionary with task name to value pairs, where the value can be:"], [16, 5, 1, 0, "outputof", "Refer to the output of another task from this pipeline, that will later be resolved."]], "ralsei.graph.pipeline.Pipeline.outputof": [[16, 1, 2, 0, "task_paths", "path from the root of the pipeline, either a string separated with . or a TreePath object"]], "ralsei.graph.resolver_context": [[17, 4, 1, 0, "resolve", "If value is ralsei.graph.OutputOf, resolve it. Otherwise, returns value"]], "ralsei.graph.sequence": [[18, 0, 1, 0, "NamedTask", "Name and task pair"], [18, 0, 1, 0, "TaskSequence", "An executable sequence of tasks"]], "ralsei.graph.sequence.NamedTask": [[18, 7, 1, 0, "name", "path as a string"], [18, 6, 1, 0, "path", ""], [18, 6, 1, 0, "task", ""]], "ralsei.graph.sequence.TaskSequence": [[18, 5, 1, 0, "delete", "Delete, committing after each successful task"], [18, 5, 1, 0, "redo", "delete() + run()"], [18, 5, 1, 0, "run", "Run, committing after each successful task"]], "ralsei.jinja": [[19, 0, 1, 0, "ISqlEnvironment", "Bases: typing.Protocol"], [19, 0, 1, 0, "SqlAdapter", "Transform values into their SQL representation"], [19, 0, 1, 0, "SqlEnvironment", "Bases: jinja2.Environment"], [19, 0, 1, 0, "SqlEnvironmentWrapper", "Layer on top of ralsei.jinja.SqlEnvironment with extra local variables"], [19, 0, 1, 0, "SqlTemplate", "Bases: jinja2.Template"], [19, 0, 1, 0, "SqlTemplateModule", "Bases: jinja2.environment.TemplateModule"], [20, 2, 0, 1, "adapter", ""], [21, 2, 0, 1, "environment", ""], [22, 2, 0, 1, "interface", ""], [23, 2, 0, 1, "wrapper", ""]], "ralsei.jinja.ISqlEnvironment": [[19, 7, 1, 0, "adapter", "Type adapter that turns values in braces (like {{value}}) into SQL strings"], [19, 7, 1, 0, "base", "The base environment"], [19, 7, 1, 0, "dialect_info", "Dialect-specific settings"], [19, 5, 1, 0, "from_string", "See jinja2.Environment.from_string()"], [19, 5, 1, 0, "render", "Render template once, shorthand for self.from_string().render()"], [19, 5, 1, 0, "render_split", "Render as multiple statements, splitting on {%split%} tag"], [19, 5, 1, 0, "render_sql", "Render and wrap with sqlalchemy.sql.expression.text()"], [19, 5, 1, 0, "render_sql_split", "Render as multiple statements, splitting on {%split%} tag, wrap with sqlalchemy.sql.expression.text()"]], "ralsei.jinja.SqlAdapter": [[19, 5, 1, 0, "format", "Similar to str.format(), but applies to_sql() to each parameter"], [19, 5, 1, 0, "register_type", "Register SQL renderer function for a type"], [19, 5, 1, 0, "to_sql", "Get SQL representation of a value"]], "ralsei.jinja.SqlEnvironment": [[19, 7, 1, 0, "adapter", "Type adapter that turns values in braces (like {{value}}) into SQL strings"], [19, 7, 1, 0, "base", ""], [19, 7, 1, 0, "dialect_info", "Dialect-specific settings"], [19, 5, 1, 0, "from_string", "See jinja2.Environment.from_string()"], [19, 5, 1, 0, "render", "Render template once, shorthand for self.from_string().render()"], [19, 5, 1, 0, "render_split", "Render as multiple statements, splitting on {%split%} tag"], [19, 5, 1, 0, "render_sql", "Render and wrap with sqlalchemy.sql.expression.text()"], [19, 5, 1, 0, "render_sql_split", "Render as multiple statements, splitting on {%split%} tag, wrap with sqlalchemy.sql.expression.text()"]], "ralsei.jinja.SqlEnvironment.__init__": [[19, 1, 2, 0, "dialect_info", "dialect-specific settings"]], "ralsei.jinja.SqlEnvironmentWrapper": [[19, 7, 1, 0, "adapter", "Type adapter that turns values in braces (like {{value}}) into SQL strings"], [19, 7, 1, 0, "base", "The base environment"], [19, 7, 1, 0, "dialect_info", "Dialect-specific settings"], [19, 5, 1, 0, "from_string", "See jinja2.Environment.from_string()"], [19, 5, 1, 0, "render", "Render template once, shorthand for self.from_string().render()"], [19, 5, 1, 0, "render_split", "Render as multiple statements, splitting on {%split%} tag"], [19, 5, 1, 0, "render_sql", "Render and wrap with sqlalchemy.sql.expression.text()"], [19, 5, 1, 0, "render_sql_split", "Render as multiple statements, splitting on {%split%} tag, wrap with sqlalchemy.sql.expression.text()"]], "ralsei.jinja.SqlEnvironmentWrapper.__init__": [[19, 1, 2, 0, "env", "the base environment"], [19, 1, 2, 0, "locals", "local variables map"]], "ralsei.jinja.SqlTemplate": [[19, 5, 1, 0, "make_module", "The template as a module, use this to access exported template variables"], [19, 5, 1, 0, "render_split", "Render as multiple statements, splitting on {%split%} tag"], [19, 5, 1, 0, "render_sql", "Render and wrap in sqlalchemy.sql.expression.text()"], [19, 5, 1, 0, "render_sql_split", "Render as multiple statements, splitting on {%split%} tag, wrap in sqlalchemy.sql.expression.text()"]], "ralsei.jinja.SqlTemplateModule": [[19, 5, 1, 0, "render", "Render as string"], [19, 5, 1, 0, "render_split", "Render as multiple statements, splitting on {%split%} tag"], [19, 5, 1, 0, "render_sql", "Render and wrap with sqlalchemy.sql.expression.text()"], [19, 5, 1, 0, "render_sql_split", "Render as multiple statements, splitting on {%split%} tag, wrap with sqlalchemy.sql.expression.text()"]], "ralsei.jinja.adapter": [[20, 0, 1, 0, "SqlAdapter", "Transform values into their SQL representation"]], "ralsei.jinja.adapter.SqlAdapter": [[20, 5, 1, 0, "format", "Similar to str.format(), but applies to_sql() to each parameter"], [20, 5, 1, 0, "register_type", "Register SQL renderer function for a type"], [20, 5, 1, 0, "to_sql", "Get SQL representation of a value"]], "ralsei.jinja.environment": [[21, 0, 1, 0, "SqlEnvironment", "Bases: jinja2.Environment"], [21, 0, 1, 0, "SqlTemplate", "Bases: jinja2.Template"], [21, 0, 1, 0, "SqlTemplateModule", "Bases: jinja2.environment.TemplateModule"]], "ralsei.jinja.environment.SqlEnvironment": [[21, 7, 1, 0, "adapter", "Type adapter that turns values in braces (like {{value}}) into SQL strings"], [21, 7, 1, 0, "base", ""], [21, 7, 1, 0, "dialect_info", "Dialect-specific settings"], [21, 5, 1, 0, "from_string", "See jinja2.Environment.from_string()"], [21, 5, 1, 0, "render", "Render template once, shorthand for self.from_string().render()"], [21, 5, 1, 0, "render_split", "Render as multiple statements, splitting on {%split%} tag"], [21, 5, 1, 0, "render_sql", "Render and wrap with sqlalchemy.sql.expression.text()"], [21, 5, 1, 0, "render_sql_split", "Render as multiple statements, splitting on {%split%} tag, wrap with sqlalchemy.sql.expression.text()"]], "ralsei.jinja.environment.SqlEnvironment.__init__": [[21, 1, 2, 0, "dialect_info", "dialect-specific settings"]], "ralsei.jinja.environment.SqlTemplate": [[21, 5, 1, 0, "make_module", "The template as a module, use this to access exported template variables"], [21, 5, 1, 0, "render_split", "Render as multiple statements, splitting on {%split%} tag"], [21, 5, 1, 0, "render_sql", "Render and wrap in sqlalchemy.sql.expression.text()"], [21, 5, 1, 0, "render_sql_split", "Render as multiple statements, splitting on {%split%} tag, wrap in sqlalchemy.sql.expression.text()"]], "ralsei.jinja.environment.SqlTemplateModule": [[21, 5, 1, 0, "render", "Render as string"], [21, 5, 1, 0, "render_split", "Render as multiple statements, splitting on {%split%} tag"], [21, 5, 1, 0, "render_sql", "Render and wrap with sqlalchemy.sql.expression.text()"], [21, 5, 1, 0, "render_sql_split", "Render as multiple statements, splitting on {%split%} tag, wrap with sqlalchemy.sql.expression.text()"]], "ralsei.jinja.interface": [[22, 0, 1, 0, "ISqlEnvironment", "Bases: typing.Protocol"]], "ralsei.jinja.interface.ISqlEnvironment": [[22, 7, 1, 0, "adapter", "Type adapter that turns values in braces (like {{value}}) into SQL strings"], [22, 7, 1, 0, "base", "The base environment"], [22, 7, 1, 0, "dialect_info", "Dialect-specific settings"], [22, 5, 1, 0, "from_string", "See jinja2.Environment.from_string()"], [22, 5, 1, 0, "render", "Render template once, shorthand for self.from_string().render()"], [22, 5, 1, 0, "render_split", "Render as multiple statements, splitting on {%split%} tag"], [22, 5, 1, 0, "render_sql", "Render and wrap with sqlalchemy.sql.expression.text()"], [22, 5, 1, 0, "render_sql_split", "Render as multiple statements, splitting on {%split%} tag, wrap with sqlalchemy.sql.expression.text()"]], "ralsei.jinja.wrapper": [[23, 0, 1, 0, "SqlEnvironmentWrapper", "Layer on top of ralsei.jinja.SqlEnvironment with extra local variables"]], "ralsei.jinja.wrapper.SqlEnvironmentWrapper": [[23, 7, 1, 0, "adapter", "Type adapter that turns values in braces (like {{value}}) into SQL strings"], [23, 7, 1, 0, "base", "The base environment"], [23, 7, 1, 0, "dialect_info", "Dialect-specific settings"], [23, 5, 1, 0, "from_string", "See jinja2.Environment.from_string()"], [23, 5, 1, 0, "render", "Render template once, shorthand for self.from_string().render()"], [23, 5, 1, 0, "render_split", "Render as multiple statements, splitting on {%split%} tag"], [23, 5, 1, 0, "render_sql", "Render and wrap with sqlalchemy.sql.expression.text()"], [23, 5, 1, 0, "render_sql_split", "Render as multiple statements, splitting on {%split%} tag, wrap with sqlalchemy.sql.expression.text()"]], "ralsei.jinja.wrapper.SqlEnvironmentWrapper.__init__": [[23, 1, 2, 0, "env", "the base environment"], [23, 1, 2, 0, "locals", "local variables map"]], "ralsei.task": [[24, 0, 1, 0, "AddColumnsSql", "Bases: ralsei.task.base.TaskDef"], [24, 0, 1, 0, "AddColumnsTask", "Bases: ralsei.task.base.TaskImpl"], [24, 0, 1, 0, "CreateTableSql", "Bases: ralsei.task.base.TaskDef"], [24, 0, 1, 0, "CreateTableTask", "Bases: ralsei.task.base.TaskImpl"], [24, 0, 1, 0, "MapToNewColumns", "Bases: ralsei.task.base.TaskDef"], [24, 0, 1, 0, "MapToNewTable", "Bases: ralsei.task.base.TaskDef"], [24, 3, 1, 0, "ROW_CONTEXT_ATRRIBUTE", "Attribute that gets added to exceptions that occured in a row processing context. br Stores the popped fields of the aforementioned row"], [24, 3, 1, 0, "ROW_CONTEXT_VAR", "ContextVar storing the popped fields of the currently processed row (used by ralsei.console.console for logging purposes)"], [24, 0, 1, 0, "Task", "Bases: abc.ABC"], [24, 0, 1, 0, "TaskDef", "Stores task aguments before said task is created"], [24, 0, 1, 0, "TaskImpl", "Bases: ralsei.task.base.Task"], [25, 2, 0, 1, "add_columns", ""], [26, 2, 0, 1, "add_columns_sql", ""], [27, 2, 0, 1, "base", ""], [28, 2, 0, 1, "create_table", ""], [29, 2, 0, 1, "create_table_sql", ""], [30, 2, 0, 1, "map_to_new_columns", ""], [31, 2, 0, 1, "map_to_new_table", ""], [32, 2, 0, 1, "rowcontext", ""]], "ralsei.task.AddColumnsSql": [[24, 6, 1, 0, "columns", "these column definitions take precedence over those defined in the template"], [24, 6, 1, 0, "sql", "Sql template strings"], [24, 6, 1, 0, "table", "Table to add columns to"]], "ralsei.task.AddColumnsTask": [[24, 6, 1, 0, "_add_columns", ""], [24, 6, 1, 0, "_columns", ""], [24, 5, 1, 0, "_delete", ""], [24, 6, 1, 0, "_drop_columns", ""], [24, 5, 1, 0, "_exists", ""], [24, 5, 1, 0, "_prepare_columns", ""], [24, 6, 1, 0, "_table", ""], [24, 7, 1, 0, "output", ""]], "ralsei.task.CreateTableSql": [[24, 6, 1, 0, "sql", "Sql template strings"], [24, 6, 1, 0, "table", "Table being created"], [24, 6, 1, 0, "view", "whether this is a VIEW instead of a TABLE"]], "ralsei.task.CreateTableTask": [[24, 5, 1, 0, "_delete", ""], [24, 6, 1, 0, "_drop_sql", ""], [24, 5, 1, 0, "_exists", ""], [24, 5, 1, 0, "_prepare_table", ""], [24, 6, 1, 0, "_table", ""], [24, 7, 1, 0, "output", ""]], "ralsei.task.MapToNewColumns": [[24, 6, 1, 0, "columns", "List of new columns"], [24, 6, 1, 0, "context", "Task-scoped context-manager arguments passed to fn"], [24, 6, 1, 0, "fn", "Function that maps one row to values of the new columns in the same row"], [24, 6, 1, 0, "id_fields", "Columns that uniquely identify a row in table, so that you can update is_done_column"], [24, 6, 1, 0, "is_done_column", "Create a boolean column with the given name in table that tracks which rows have been processed"], [24, 6, 1, 0, "select", "The SELECT statement that generates input rows passed to fn as arguments"], [24, 6, 1, 0, "table", "Table to add columns to"]], "ralsei.task.MapToNewTable": [[24, 6, 1, 0, "columns", "Columns (and constraints) that make up the table definition"], [24, 6, 1, 0, "context", "Task-scoped context-manager arguments passed to fn"], [24, 6, 1, 0, "fn", "A generator function, mapping one row to many rows"], [24, 6, 1, 0, "id_fields", "Columns that uniquely identify a row in source_table, so that you can update is_done_column"], [24, 6, 1, 0, "is_done_column", "Create a boolean column with the given name in source_table that tracks which rows have been processed"], [24, 6, 1, 0, "select", "The SELECT statement that generates rows passed to fn as arguments"], [24, 6, 1, 0, "source_table", "The table where the input rows come from"], [24, 6, 1, 0, "table", "The new table being created"]], "ralsei.task.Task": [[24, 5, 1, 0, "delete", "Delete whatever run() has created"], [24, 5, 1, 0, "exists", "Check if task has already been done"], [24, 7, 1, 0, "output", "Object created or modified by this task (usually a ralsei.types.Table)"], [24, 5, 1, 0, "redo", "Calls delete() and then run()"], [24, 5, 1, 0, "run", "Run the task"], [24, 5, 1, 0, "scripts", "Get SQL scripts rendered by this task"]], "ralsei.task.TaskDef": [[24, 6, 1, 0, "Impl", "The associated task class"], [24, 5, 1, 0, "create", "Instantiate the associated Impl"], [24, 6, 1, 0, "locals", "Local variables added to the jinja environment"]], "ralsei.task.TaskImpl": [[24, 5, 1, 0, "_delete", "Delete whatever _run() has created"], [24, 5, 1, 0, "_exists", "Check if task has already been done"], [24, 5, 1, 0, "_run", "Run the task"], [24, 6, 1, 0, "_scripts", "You can save your sql scripts here when you render them, the key-value pairs will be returned by scripts()"], [24, 5, 1, 0, "delete", ""], [24, 6, 1, 0, "env", ""], [24, 5, 1, 0, "exists", ""], [24, 5, 1, 0, "prepare", "Perform your initialization here"], [24, 5, 1, 0, "resolve", "Resolve a dependency"], [24, 5, 1, 0, "run", ""], [24, 5, 1, 0, "scripts", "Get SQL scripts rendered by this task"]], "ralsei.task.TaskImpl.__init__": [[24, 1, 2, 0, "env", "jinja environment"], [24, 1, 2, 0, "this", "the settings object for this task"]], "ralsei.task.TaskImpl.prepare": [[24, 1, 2, 0, "this", "the settings object for this task"]], "ralsei.task.TaskImpl.resolve": [[24, 1, 2, 0, "value", "may or may not need dependency resolution"]], "ralsei.task.add_columns": [[25, 0, 1, 0, "AddColumnsTask", "Bases: ralsei.task.base.TaskImpl"]], "ralsei.task.add_columns.AddColumnsTask": [[25, 6, 1, 0, "_add_columns", ""], [25, 6, 1, 0, "_columns", ""], [25, 5, 1, 0, "_delete", ""], [25, 6, 1, 0, "_drop_columns", ""], [25, 5, 1, 0, "_exists", ""], [25, 5, 1, 0, "_prepare_columns", ""], [25, 6, 1, 0, "_table", ""], [25, 7, 1, 0, "output", ""]], "ralsei.task.add_columns_sql": [[26, 0, 1, 0, "AddColumnsSql", "Bases: ralsei.task.base.TaskDef"]], "ralsei.task.add_columns_sql.AddColumnsSql": [[26, 6, 1, 0, "columns", "these column definitions take precedence over those defined in the template"], [26, 6, 1, 0, "sql", "Sql template strings"], [26, 6, 1, 0, "table", "Table to add columns to"]], "ralsei.task.add_columns_sql.ralsei.task.add_columns_sql.AddColumnsSql": [[44, 0, 1, 0, "AddColumnsSql", "Bases: ralsei.task.base.TaskDef"]], "ralsei.task.add_columns_sql.ralsei.task.add_columns_sql.AddColumnsSql.AddColumnsSql": [[44, 6, 1, 0, "columns", "these column definitions take precedence over those defined in the template"], [44, 6, 1, 0, "sql", "Sql template strings"], [44, 6, 1, 0, "table", "Table to add columns to"]], "ralsei.task.base": [[27, 0, 1, 0, "Task", "Bases: abc.ABC"], [27, 0, 1, 0, "TaskDef", "Stores task aguments before said task is created"], [27, 0, 1, 0, "TaskImpl", "Bases: ralsei.task.base.Task"]], "ralsei.task.base.Task": [[27, 5, 1, 0, "delete", "Delete whatever run() has created"], [27, 5, 1, 0, "exists", "Check if task has already been done"], [27, 7, 1, 0, "output", "Object created or modified by this task (usually a ralsei.types.Table)"], [27, 5, 1, 0, "redo", "Calls delete() and then run()"], [27, 5, 1, 0, "run", "Run the task"], [27, 5, 1, 0, "scripts", "Get SQL scripts rendered by this task"]], "ralsei.task.base.TaskDef": [[27, 6, 1, 0, "Impl", "The associated task class"], [27, 5, 1, 0, "create", "Instantiate the associated Impl"], [27, 6, 1, 0, "locals", "Local variables added to the jinja environment"]], "ralsei.task.base.TaskImpl": [[27, 5, 1, 0, "_delete", "Delete whatever _run() has created"], [27, 5, 1, 0, "_exists", "Check if task has already been done"], [27, 5, 1, 0, "_run", "Run the task"], [27, 6, 1, 0, "_scripts", "You can save your sql scripts here when you render them, the key-value pairs will be returned by scripts()"], [27, 5, 1, 0, "delete", ""], [27, 6, 1, 0, "env", ""], [27, 5, 1, 0, "exists", ""], [27, 5, 1, 0, "prepare", "Perform your initialization here"], [27, 5, 1, 0, "resolve", "Resolve a dependency"], [27, 5, 1, 0, "run", ""], [27, 5, 1, 0, "scripts", "Get SQL scripts rendered by this task"]], "ralsei.task.base.TaskImpl.__init__": [[27, 1, 2, 0, "env", "jinja environment"], [27, 1, 2, 0, "this", "the settings object for this task"]], "ralsei.task.base.TaskImpl.prepare": [[27, 1, 2, 0, "this", "the settings object for this task"]], "ralsei.task.base.TaskImpl.resolve": [[27, 1, 2, 0, "value", "may or may not need dependency resolution"]], "ralsei.task.create_table": [[28, 0, 1, 0, "CreateTableTask", "Bases: ralsei.task.base.TaskImpl"]], "ralsei.task.create_table.CreateTableTask": [[28, 5, 1, 0, "_delete", ""], [28, 6, 1, 0, "_drop_sql", ""], [28, 5, 1, 0, "_exists", ""], [28, 5, 1, 0, "_prepare_table", ""], [28, 6, 1, 0, "_table", ""], [28, 7, 1, 0, "output", ""]], "ralsei.task.create_table_sql": [[29, 0, 1, 0, "CreateTableSql", "Bases: ralsei.task.base.TaskDef"]], "ralsei.task.create_table_sql.CreateTableSql": [[29, 6, 1, 0, "sql", "Sql template strings"], [29, 6, 1, 0, "table", "Table being created"], [29, 6, 1, 0, "view", "whether this is a VIEW instead of a TABLE"]], "ralsei.task.create_table_sql.ralsei.task.create_table_sql.CreateTableSql": [[44, 0, 1, 0, "CreateTableSql", "Bases: ralsei.task.base.TaskDef"]], "ralsei.task.create_table_sql.ralsei.task.create_table_sql.CreateTableSql.CreateTableSql": [[44, 6, 1, 0, "sql", "Sql template strings"], [44, 6, 1, 0, "table", "Table being created"], [44, 6, 1, 0, "view", "whether this is a VIEW instead of a TABLE"]], "ralsei.task.map_to_new_columns": [[30, 0, 1, 0, "MapToNewColumns", "Bases: ralsei.task.base.TaskDef"]], "ralsei.task.map_to_new_columns.MapToNewColumns": [[30, 6, 1, 0, "columns", "List of new columns"], [30, 6, 1, 0, "context", "Task-scoped context-manager arguments passed to fn"], [30, 6, 1, 0, "fn", "Function that maps one row to values of the new columns in the same row"], [30, 6, 1, 0, "id_fields", "Columns that uniquely identify a row in table, so that you can update is_done_column"], [30, 6, 1, 0, "is_done_column", "Create a boolean column with the given name in table that tracks which rows have been processed"], [30, 6, 1, 0, "select", "The SELECT statement that generates input rows passed to fn as arguments"], [30, 6, 1, 0, "table", "Table to add columns to"]], "ralsei.task.map_to_new_columns.ralsei.task.map_to_new_columns.MapToNewColumns": [[44, 0, 1, 0, "MapToNewColumns", "Bases: ralsei.task.base.TaskDef"]], "ralsei.task.map_to_new_columns.ralsei.task.map_to_new_columns.MapToNewColumns.MapToNewColumns": [[44, 6, 1, 0, "columns", "List of new columns"], [44, 6, 1, 0, "context", "Task-scoped context-manager arguments passed to fn"], [44, 6, 1, 0, "fn", "Function that maps one row to values of the new columns in the same row"], [44, 6, 1, 0, "id_fields", "Columns that uniquely identify a row in table, so that you can update is_done_column"], [44, 6, 1, 0, "is_done_column", "Create a boolean column with the given name in table that tracks which rows have been processed"], [44, 6, 1, 0, "select", "The SELECT statement that generates input rows passed to fn as arguments"], [44, 6, 1, 0, "table", "Table to add columns to"]], "ralsei.task.map_to_new_table": [[31, 0, 1, 0, "MapToNewTable", "Bases: ralsei.task.base.TaskDef"]], "ralsei.task.map_to_new_table.MapToNewTable": [[31, 6, 1, 0, "columns", "Columns (and constraints) that make up the table definition"], [31, 6, 1, 0, "context", "Task-scoped context-manager arguments passed to fn"], [31, 6, 1, 0, "fn", "A generator function, mapping one row to many rows"], [31, 6, 1, 0, "id_fields", "Columns that uniquely identify a row in source_table, so that you can update is_done_column"], [31, 6, 1, 0, "is_done_column", "Create a boolean column with the given name in source_table that tracks which rows have been processed"], [31, 6, 1, 0, "select", "The SELECT statement that generates rows passed to fn as arguments"], [31, 6, 1, 0, "source_table", "The table where the input rows come from"], [31, 6, 1, 0, "table", "The new table being created"]], "ralsei.task.map_to_new_table.ralsei.task.map_to_new_table.MapToNewTable": [[44, 0, 1, 0, "MapToNewTable", "Bases: ralsei.task.base.TaskDef"]], "ralsei.task.map_to_new_table.ralsei.task.map_to_new_table.MapToNewTable.MapToNewTable": [[44, 6, 1, 0, "columns", "Columns (and constraints) that make up the table definition"], [44, 6, 1, 0, "context", "Task-scoped context-manager arguments passed to fn"], [44, 6, 1, 0, "fn", "A generator function, mapping one row to many rows"], [44, 6, 1, 0, "id_fields", "Columns that uniquely identify a row in source_table, so that you can update is_done_column"], [44, 6, 1, 0, "is_done_column", "Create a boolean column with the given name in source_table that tracks which rows have been processed"], [44, 6, 1, 0, "select", "The SELECT statement that generates rows passed to fn as arguments"], [44, 6, 1, 0, "source_table", "The table where the input rows come from"], [44, 6, 1, 0, "table", "The new table being created"]], "ralsei.task.rowcontext": [[32, 3, 1, 0, "ROW_CONTEXT_ATRRIBUTE", "Attribute that gets added to exceptions that occured in a row processing context. br Stores the popped fields of the aforementioned row"], [32, 3, 1, 0, "ROW_CONTEXT_VAR", "ContextVar storing the popped fields of the currently processed row (used by ralsei.console.console for logging purposes)"], [32, 0, 1, 0, "RowContext", "Initialization    static from_input_row(input_row: dict, popped_names: set[str]) -> ralsei.task.rowcontext.RowContext      __enter__() -> ralsei.task.rowcontext.RowContext      __exit__(exc_type, exc_value, traceback)"]], "ralsei.task.rowcontext.RowContext": [[32, 5, 1, 0, "__enter__", ""], [32, 5, 1, 0, "__exit__", ""], [32, 5, 1, 0, "from_input_row", ""]], "ralsei.types": [[33, 0, 1, 0, "Column", "Bases: ralsei.types.column.ColumnBase"], [33, 0, 1, 0, "ColumnBase", "Bases: abc.ABC"], [33, 0, 1, 0, "ColumnDefinition", "Bases: ralsei.types.to_sql.ToSql"], [33, 0, 1, 0, "ColumnRendered", "Bases: ralsei.types.column.ColumnBase"], [33, 0, 1, 0, "IdColumn", "Bases: ralsei.types.to_sql.ToSql"], [33, 0, 1, 0, "Identifier", "Bases: ralsei.types.to_sql.ToSql"], [33, 0, 1, 0, "Placeholder", "Bases: ralsei.types.to_sql.ToSql"], [33, 0, 1, 0, "Sql", "Bases: ralsei.types.to_sql.ToSql"], [33, 0, 1, 0, "Table", "Bases: ralsei.types.to_sql.ToSql"], [33, 0, 1, 0, "ToSql", "Bases: abc.ABC"], [33, 0, 1, 0, "ValueColumn", "Bases: ralsei.types.column.Column, ralsei.types.value_column.ValueColumnBase"], [33, 0, 1, 0, "ValueColumnBase", "Bases: ralsei.types.column.ColumnBase"], [33, 0, 1, 0, "ValueColumnRendered", "Bases: ralsei.types.column.ColumnRendered, ralsei.types.value_column.ValueColumnBase"], [33, 0, 1, 0, "ValueColumnSetStatement", "Bases: ralsei.types.to_sql.ToSql"], [34, 2, 0, 1, "column", ""], [35, 2, 0, 1, "primitives", ""], [36, 2, 0, 1, "to_sql", ""], [37, 2, 0, 1, "value_column", ""]], "ralsei.types.Column": [[33, 5, 1, 0, "render", "Render the type template"]], "ralsei.types.Column.__init__": [[33, 1, 2, 0, "name", "column name"], [33, 1, 2, 0, "type", "jinja template of the column type, like INT REFERENCES {{other}}(id)"]], "ralsei.types.ColumnBase": [[33, 7, 1, 0, "identifier", "name wrapped in a SQL identifier"], [33, 6, 1, 0, "name", ""], [33, 5, 1, 0, "render", "Turn into the rendered version"]], "ralsei.types.ColumnDefinition": [[33, 6, 1, 0, "column", ""], [33, 5, 1, 0, "to_sql", ""]], "ralsei.types.ColumnRendered": [[33, 7, 1, 0, "definition", "As column definition (name + type)"], [33, 5, 1, 0, "render", ""], [33, 6, 1, 0, "type", ""]], "ralsei.types.ColumnRendered.__init__": [[33, 1, 2, 0, "name", "column name"], [33, 1, 2, 0, "type", "column type as raw sql string, like INT REFERENCES \"other\"(id)"]], "ralsei.types.IdColumn": [[33, 7, 1, 0, "identifier", "name wrapped in a SQL identifier"], [33, 6, 1, 0, "name", ""], [33, 5, 1, 0, "to_sql", ""], [33, 6, 1, 0, "value", ""]], "ralsei.types.IdColumn.__init__": [[33, 1, 2, 0, "name", "column name"], [33, 1, 2, 0, "value", "value that uniquely identifies a row"]], "ralsei.types.Identifier": [[33, 5, 1, 0, "to_sql", ""], [33, 6, 1, 0, "value", ""]], "ralsei.types.Placeholder": [[33, 5, 1, 0, "__post_init__", ""], [33, 6, 1, 0, "name", ""], [33, 5, 1, 0, "to_sql", ""]], "ralsei.types.Sql": [[33, 5, 1, 0, "to_sql", ""], [33, 6, 1, 0, "value", ""]], "ralsei.types.Table": [[33, 5, 1, 0, "__str__", ""], [33, 6, 1, 0, "name", ""], [33, 6, 1, 0, "schema", ""], [33, 5, 1, 0, "to_sql", ""]], "ralsei.types.ToSql": [[33, 5, 1, 0, "to_sql", "Render to SQL string"]], "ralsei.types.ValueColumn": [[33, 5, 1, 0, "render", "Render the type template"]], "ralsei.types.ValueColumn.__init__": [[33, 1, 2, 0, "name", "column name"], [33, 1, 2, 0, "type", "jinja template of the column type, like INT REFERENCES {{other}}(id)"], [33, 1, 2, 0, "value", "value that will be applied to the column"]], "ralsei.types.ValueColumnBase": [[33, 5, 1, 0, "render", "Turn into the rendered version"], [33, 7, 1, 0, "set_statement", "As set statement (name = value)"], [33, 6, 1, 0, "value", ""]], "ralsei.types.ValueColumnBase.__init__": [[33, 1, 2, 0, "name", "column name"], [33, 1, 2, 0, "value", "value that will be applied to the column"]], "ralsei.types.ValueColumnRendered": [[33, 5, 1, 0, "render", ""]], "ralsei.types.ValueColumnRendered.__init__": [[33, 1, 2, 0, "name", "column name"], [33, 1, 2, 0, "type", "column type as raw sql string, like INT REFERENCES \"other\"(id)"], [33, 1, 2, 0, "value", "value that will be applied to the column"]], "ralsei.types.ValueColumnSetStatement": [[33, 5, 1, 0, "to_sql", ""], [33, 6, 1, 0, "value_column", ""]], "ralsei.types.column": [[34, 0, 1, 0, "Column", "Bases: ralsei.types.column.ColumnBase"], [34, 0, 1, 0, "ColumnBase", "Bases: abc.ABC"], [34, 0, 1, 0, "ColumnDefinition", "Bases: ralsei.types.to_sql.ToSql"], [34, 0, 1, 0, "ColumnRendered", "Bases: ralsei.types.column.ColumnBase"]], "ralsei.types.column.Column": [[34, 5, 1, 0, "render", "Render the type template"]], "ralsei.types.column.Column.__init__": [[34, 1, 2, 0, "name", "column name"], [34, 1, 2, 0, "type", "jinja template of the column type, like INT REFERENCES {{other}}(id)"]], "ralsei.types.column.ColumnBase": [[34, 7, 1, 0, "identifier", "name wrapped in a SQL identifier"], [34, 6, 1, 0, "name", ""], [34, 5, 1, 0, "render", "Turn into the rendered version"]], "ralsei.types.column.ColumnDefinition": [[34, 6, 1, 0, "column", ""], [34, 5, 1, 0, "to_sql", ""]], "ralsei.types.column.ColumnRendered": [[34, 7, 1, 0, "definition", "As column definition (name + type)"], [34, 5, 1, 0, "render", ""], [34, 6, 1, 0, "type", ""]], "ralsei.types.column.ColumnRendered.__init__": [[34, 1, 2, 0, "name", "column name"], [34, 1, 2, 0, "type", "column type as raw sql string, like INT REFERENCES \"other\"(id)"]], "ralsei.types.primitives": [[35, 0, 1, 0, "Identifier", "Bases: ralsei.types.to_sql.ToSql"], [35, 0, 1, 0, "Placeholder", "Bases: ralsei.types.to_sql.ToSql"], [35, 0, 1, 0, "Sql", "Bases: ralsei.types.to_sql.ToSql"], [35, 0, 1, 0, "Table", "Bases: ralsei.types.to_sql.ToSql"]], "ralsei.types.primitives.Identifier": [[35, 5, 1, 0, "to_sql", ""], [35, 6, 1, 0, "value", ""]], "ralsei.types.primitives.Placeholder": [[35, 5, 1, 0, "__post_init__", ""], [35, 6, 1, 0, "name", ""], [35, 5, 1, 0, "to_sql", ""]], "ralsei.types.primitives.Sql": [[35, 5, 1, 0, "to_sql", ""], [35, 6, 1, 0, "value", ""]], "ralsei.types.primitives.Table": [[35, 5, 1, 0, "__str__", ""], [35, 6, 1, 0, "name", ""], [35, 6, 1, 0, "schema", ""], [35, 5, 1, 0, "to_sql", ""]], "ralsei.types.primitives.ralsei.types.primitives.Identifier": [[43, 0, 1, 0, "Identifier", "Bases: ralsei.types.to_sql.ToSql"]], "ralsei.types.primitives.ralsei.types.primitives.Identifier.Identifier": [[43, 5, 1, 0, "to_sql", ""], [43, 6, 1, 0, "value", ""]], "ralsei.types.primitives.ralsei.types.primitives.Placeholder": [[43, 0, 1, 0, "Placeholder", "Bases: ralsei.types.to_sql.ToSql"]], "ralsei.types.primitives.ralsei.types.primitives.Placeholder.Placeholder": [[43, 5, 1, 0, "__post_init__", ""], [43, 6, 1, 0, "name", ""], [43, 5, 1, 0, "to_sql", ""]], "ralsei.types.primitives.ralsei.types.primitives.Sql": [[43, 0, 1, 0, "Sql", "Bases: ralsei.types.to_sql.ToSql"]], "ralsei.types.primitives.ralsei.types.primitives.Sql.Sql": [[43, 5, 1, 0, "to_sql", ""], [43, 6, 1, 0, "value", ""]], "ralsei.types.primitives.ralsei.types.primitives.Table": [[43, 0, 1, 0, "Table", "Bases: ralsei.types.to_sql.ToSql"]], "ralsei.types.primitives.ralsei.types.primitives.Table.Table": [[43, 5, 1, 0, "__str__", ""], [43, 6, 1, 0, "name", ""], [43, 6, 1, 0, "schema", ""], [43, 5, 1, 0, "to_sql", ""]], "ralsei.types.to_sql": [[36, 0, 1, 0, "ToSql", "Bases: abc.ABC"]], "ralsei.types.to_sql.ToSql": [[36, 5, 1, 0, "to_sql", "Render to SQL string"]], "ralsei.types.value_column": [[37, 0, 1, 0, "IdColumn", "Bases: ralsei.types.to_sql.ToSql"], [37, 0, 1, 0, "ValueColumn", "Bases: ralsei.types.column.Column, ralsei.types.value_column.ValueColumnBase"], [37, 0, 1, 0, "ValueColumnBase", "Bases: ralsei.types.column.ColumnBase"], [37, 0, 1, 0, "ValueColumnRendered", "Bases: ralsei.types.column.ColumnRendered, ralsei.types.value_column.ValueColumnBase"], [37, 0, 1, 0, "ValueColumnSetStatement", "Bases: ralsei.types.to_sql.ToSql"]], "ralsei.types.value_column.IdColumn": [[37, 7, 1, 0, "identifier", "name wrapped in a SQL identifier"], [37, 6, 1, 0, "name", ""], [37, 5, 1, 0, "to_sql", ""], [37, 6, 1, 0, "value", ""]], "ralsei.types.value_column.IdColumn.__init__": [[37, 1, 2, 0, "name", "column name"], [37, 1, 2, 0, "value", "value that uniquely identifies a row"]], "ralsei.types.value_column.ValueColumn": [[37, 5, 1, 0, "render", "Render the type template"]], "ralsei.types.value_column.ValueColumn.__init__": [[37, 1, 2, 0, "name", "column name"], [37, 1, 2, 0, "type", "jinja template of the column type, like INT REFERENCES {{other}}(id)"], [37, 1, 2, 0, "value", "value that will be applied to the column"]], "ralsei.types.value_column.ValueColumnBase": [[37, 5, 1, 0, "render", "Turn into the rendered version"], [37, 7, 1, 0, "set_statement", "As set statement (name = value)"], [37, 6, 1, 0, "value", ""]], "ralsei.types.value_column.ValueColumnBase.__init__": [[37, 1, 2, 0, "name", "column name"], [37, 1, 2, 0, "value", "value that will be applied to the column"]], "ralsei.types.value_column.ValueColumnRendered": [[37, 5, 1, 0, "render", ""]], "ralsei.types.value_column.ValueColumnRendered.__init__": [[37, 1, 2, 0, "name", "column name"], [37, 1, 2, 0, "type", "column type as raw sql string, like INT REFERENCES \"other\"(id)"], [37, 1, 2, 0, "value", "value that will be applied to the column"]], "ralsei.types.value_column.ValueColumnSetStatement": [[37, 5, 1, 0, "to_sql", ""], [37, 6, 1, 0, "value_column", ""]], "ralsei.utils": [[38, 4, 1, 0, "expect", "Ensure value is not None, throw exception otherwise"], [38, 4, 1, 0, "folder", "Get the parent directory of the file that called this function"]], "ralsei.wrappers": [[39, 0, 1, 0, "OneToMany", "One row to many rows mapping function"], [39, 0, 1, 0, "OneToOne", "Row to row mapping function"], [39, 4, 1, 0, "add_to_input", "Create function wrapper that adds to the keyword arguments"], [39, 4, 1, 0, "add_to_output", "Create function wrapper that adds entries to the output dictionary"], [39, 4, 1, 0, "compose", "Compose multiple decorators together on a OneToMany"], [39, 4, 1, 0, "compose_one", "Compose multiple decorators together on a OneToOne"], [39, 4, 1, 0, "get_popped_fields", "Get fields popped by pop_id_fields() from the function metadata"], [39, 4, 1, 0, "into_many", "Turn OneToOne mapping function into OneToMany"], [39, 4, 1, 0, "into_one", "Turn OneToMany mapping function into OneToOne"], [39, 4, 1, 0, "pop_id_fields", "Create function wrapper that 'pops' id_fields off the keyword arguments, calls the inner function without them, then re-inserts them into the output rows"], [39, 4, 1, 0, "rename_input", "Create function wrapper that remaps keyword argument names"], [39, 4, 1, 0, "rename_output", "Create function wrapper that remaps fields in the output dictionary"]], "ralsei.wrappers.compose": [[39, 1, 2, 0, "decorators", "decorators to apply"], [39, 1, 2, 0, "fn", "base function"]], "ralsei.wrappers.compose_one": [[39, 1, 2, 0, "decorators", "decorators to apply"], [39, 1, 2, 0, "fn", "base function"]], "ralsei.wrappers.pop_id_fields": [[39, 1, 2, 0, "id_fields", "keyword arguments to pop"], [39, 1, 2, 0, "keep", "if True, the popped arguments would still be passed to the inner function"]]}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "parameter", "Python parameter"], "2": ["py", "module", "Python module"], "3": ["py", "data", "Python data"], "4": ["py", "function", "Python function"], "5": ["py", "method", "Python method"], "6": ["py", "attribute", "Python attribute"], "7": ["py", "property", "Python property"], "8": ["py", "exception", "Python exception"]}, "objtypes": {"0": "py:class", "1": "py:parameter", "2": "py:module", "3": "py:data", "4": "py:function", "5": "py:method", "6": "py:attribute", "7": "py:property", "8": "py:exception"}, "terms": {"": [2, 3, 5, 6, 24, 30, 31, 39, 40, 42, 43, 44], "0": [24, 31, 44], "0x742d72897680": 8, "1": [0, 8, 24, 31, 44, 45], "10": 39, "2": [39, 45], "20": [3, 4], "2015": [39, 45], "2018": 45, "2021": 45, "2022": [24, 31, 44], "3": [39, 45], "4": [44, 45], "5": [39, 45], "6": [39, 45], "8": 8, "A": [7, 11, 12, 16, 24, 31, 33, 35, 43, 44], "AND": 40, "And": 43, "As": [33, 34, 37], "By": [19, 21, 22, 23, 33, 37], "For": [42, 44], "IF": [9, 40, 44], "INTO": [24, 29, 42, 43, 44, 45], "If": [11, 12, 17, 24, 30, 31, 44], "In": [42, 43, 44], "It": [24, 27, 43, 45], "NOT": [9, 24, 30, 31, 40, 44, 45], "One": 39, "The": [2, 19, 21, 22, 23, 24, 27, 30, 31, 40, 41, 44, 45], "Then": [42, 44], "There": 42, "To": 44, "__all__": 1, "__call__": 9, "__creat": [24, 27], "__download": [24, 30, 31, 44], "__drop_sql": 44, "__enter__": [3, 5, 6, 8, 32], "__exc_typ": 8, "__exc_valu": 8, "__exit__": [3, 6, 8, 32], "__init__": [2, 24, 27, 40, 42, 45], "__length_hint__": [3, 6], "__main__": [2, 40, 45], "__name__": [2, 40, 45], "__new__": [11, 15], "__path": [24, 28, 44], "__post_init__": [11, 14, 33, 35, 43], "__ralsei_row_context": [24, 32], "__repr__": [11, 15], "__str__": [9, 11, 15, 33, 35, 43], "__tabl": 44, "__traceback": 8, "_add_column": [24, 25], "_allow_autobegin": [3, 5], "_allow_revalid": [3, 5], "_column": [24, 25], "_coreanyexecuteparam": [3, 5, 6], "_create_engin": 2, "_delet": [24, 25, 27, 28, 44], "_download": 45, "_drop_column": [24, 25], "_drop_sql": [24, 28], "_exist": [24, 25, 27, 28, 44], "_has_ev": [3, 5], "_io": 8, "_on_connect": [2, 40], "_prepare_column": [24, 25], "_prepare_env": [2, 40, 43], "_prepare_t": [24, 28, 44], "_reusablegeneratorcontextmanag": 8, "_run": [24, 25, 27, 28, 44], "_script": [24, 27, 44], "_source_t": 42, "_tabl": [24, 25, 28, 44], "abc": [3, 5, 6, 7, 8, 9, 10, 11, 12, 16, 19, 20, 21, 22, 23, 24, 25, 27, 33, 34, 36, 39, 43], "abil": 45, "abov": 42, "abstract": [11, 16, 24, 27, 33, 34, 36, 37, 44], "accept": [11, 16, 42], "access": [3, 6, 19, 21], "account": [11, 16], "accur": [11, 15], "act": 8, "action": [9, 44], "ad": [2, 9, 24, 27, 32, 40, 44], "adapt": [19, 21, 22, 23, 45], "add": [2, 9, 24, 25, 26, 30, 39, 40, 42, 44, 45], "add_to_input": [24, 31, 39, 44], "add_to_output": 39, "add_valu": 39, "addcolumn": [9, 24, 25], "addcolumnssql": [11, 14, 16, 24, 26, 42, 43, 44], "addcolumnstask": [24, 25, 44], "addit": [3, 4, 5, 7], "addition": [24, 31, 39, 44], "advanc": 44, "advis": [24, 27], "aforement": [24, 32], "after": [2, 11, 18, 24, 30, 31, 40, 42, 44], "againt": [24, 27], "agument": [24, 27], "all": [9, 11, 12, 14, 16, 19, 21, 24, 25, 28, 31, 40, 42, 44], "allow": [2, 11, 16, 24, 30, 31, 40, 42, 44, 45], "along": 40, "alreadi": [24, 27, 44, 45], "also": [8, 42], "alwai": [2, 40], "am": 43, "an": [3, 6, 11, 18, 19, 21, 24, 26, 33, 36, 37, 39, 42, 44, 45], "analysi": 45, "analyst": 45, "analyz": 42, "analyze_person": 42, "ani": [3, 5, 6, 8, 11, 17, 19, 20, 21, 22, 23, 24, 25, 27, 28, 30, 31, 33, 34, 35, 37, 39, 43, 44], "anoth": [11, 16, 24, 26, 30, 31, 42, 44, 45], "api": 45, "app": [0, 1, 40, 45], "appli": [3, 4, 11, 12, 19, 20, 24, 27, 30, 31, 33, 37, 39, 44], "applic": [2, 41, 45], "appropri": 43, "ar": [2, 11, 12, 14, 16, 19, 21, 24, 25, 28, 31, 39, 40, 42, 44, 45], "aren": 44, "arg": [2, 11, 13, 19, 20, 21, 22, 23, 40], "argument": [2, 8, 24, 27, 30, 31, 39, 41, 42, 44], "around": [3, 4], "associ": [24, 27, 33, 37], "attribut": [19, 21, 24, 32, 43, 44], "auto": 0, "autodoc2": 0, "autoincrement_kei": 10, "automat": [24, 27, 40, 42], "avail": [19, 21], "awar": [19, 21, 41], "b": 39, "bar": 7, "base": [2, 3, 5, 8, 10, 11, 13, 15, 16, 19, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 33, 34, 35, 36, 37, 39, 43, 44, 45], "basedialectinfo": [10, 19, 21], "baseexcept": 8, "basic": 45, "becom": [42, 43], "been": [24, 27, 30, 31, 44, 45], "befor": [24, 27], "being": [24, 29, 31, 44], "benefici": 45, "bind": [3, 6, 33, 35, 43], "bind_param": [3, 6], "block": 42, "bodi": [24, 31, 44], "body_stream": [19, 21], "boilerpl": 44, "bool": [3, 5, 8, 9, 10, 19, 21, 24, 25, 27, 28, 29, 39, 44], "boolean": [24, 30, 31, 44], "both": [10, 11, 12, 14, 16, 42, 45], "brace": [19, 21, 22, 23], "break": [43, 45], "browser": [24, 30, 31, 44], "browser_context": [24, 30, 31, 44], "build": [2, 44, 45], "build_cli": 2, "build_dag": [11, 16], "builtin": 41, "c": 1, "call": [2, 7, 11, 13, 17, 24, 25, 27, 28, 38, 39, 40, 43, 44], "callabl": [8, 10, 19, 20, 39, 43], "can": [2, 8, 10, 11, 16, 17, 19, 21, 24, 26, 27, 29, 30, 31, 39, 40, 42, 43, 44, 45], "cannot": [11, 15], "case": [2, 24, 27, 42, 44, 45], "chain": 45, "charact": [33, 35, 43], "check": [9, 24, 27, 44], "chrome": [24, 30, 31, 44], "class": [39, 40, 42, 43, 44, 45], "classmethod": [2, 40], "classvar": [24, 27], "claus": [33, 37], "cli": [2, 11, 12, 41, 44, 45], "click": [2, 40, 45], "cloud": 45, "code": [2, 40], "collect": [3, 5, 6, 7, 8, 9, 10, 11, 12, 16, 19, 20, 21, 22, 23, 24, 25, 27, 39, 43, 45], "column": [1, 9, 11, 14, 16, 24, 25, 26, 30, 31, 33, 37, 42, 43, 44, 45], "columnbas": [24, 25, 26, 33, 34, 37, 44], "columndefinit": [33, 34], "columnrend": [9, 24, 25, 33, 34, 37], "columns_exist": 9, "com": [24, 31, 44, 45], "combin": [3, 6, 11, 12], "come": [24, 31, 44], "commit": [11, 18, 24, 30, 31, 44], "compil": [11, 16, 19, 21], "compos": [24, 31, 39, 42, 44, 45], "compose_on": [24, 30, 39, 44, 45], "comprehens": 45, "comput": 45, "concret": [3, 6], "configur": [3, 4, 40, 44], "conn": [2, 9, 11, 18, 24, 25, 27, 28, 40, 44], "connect": [0, 1, 2, 9, 11, 18, 24, 25, 27, 28, 40, 44], "connectionenviron": [1, 2, 3, 6, 9, 24, 25, 27, 28, 40, 44], "connectionext": [3, 5, 6, 11, 18, 24, 27], "consid": 45, "consist": 44, "consol": [0, 1, 24, 32], "constrain_starting_nod": [11, 12], "constraint": [24, 31, 44], "construct": [3, 5], "constructor": [2, 40, 42], "contain": [0, 11, 15], "context": [8, 11, 13, 19, 21, 24, 30, 31, 32, 44], "context_manag": 8, "contextlib": 8, "contextmanag": [0, 1, 24, 30, 31, 44], "contextvar": [24, 32], "control": 45, "convini": 42, "counterpart": 43, "creat": [0, 2, 3, 6, 24, 27, 29, 30, 31, 39, 40, 42, 43, 44, 45], "create_engin": [1, 3, 4], "create_task": [11, 16, 24, 30, 31, 42, 44, 45], "createtablesql": [24, 29, 42, 43, 44, 45], "createtabletask": [24, 28, 44], "creation": [2, 24, 28, 45], "ctx": 8, "current": [7, 24, 26, 29, 32, 43, 44], "cursorresult": [3, 5, 6], "custom": [2, 10, 41, 45], "custom_funct": 40, "cyclicgrapherror": [11, 13], "d": [10, 24, 27, 40, 45], "dag": [2, 11, 16, 42], "data": [26, 44, 45], "databas": [2, 3, 6, 40, 43, 44, 45], "dataclass": [24, 27, 44], "dataset": 44, "date": [24, 30, 31, 44], "date_download": [24, 30, 31, 44], "db": [40, 45], "db_action": [0, 1, 24, 25, 44], "ddl": [3, 4], "debug": 40, "decid": [11, 16], "declar": [11, 16, 42, 44, 45], "decor": [2, 10, 24, 27, 39, 40, 44, 45], "def": [2, 8, 24, 27, 28, 30, 31, 39, 40, 42, 43, 44, 45], "default": [7, 19, 21, 22, 23, 24, 31, 33, 37, 41, 44], "defin": [11, 16, 24, 26, 43, 44, 45], "definit": [11, 16, 24, 26, 31, 33, 34, 44, 45], "delet": [11, 18, 24, 27, 44], "delimit": 43, "demand": 45, "depend": [3, 6, 11, 13, 14, 16, 24, 27, 41, 43, 44, 45], "descend": [11, 12, 40, 44], "describ": [8, 19, 22], "descript": 7, "detect": [11, 13], "dev": 45, "diagram": [11, 12], "dialect": [0, 1, 3, 4, 6, 19, 21, 22, 23, 43], "dialect_info": [3, 6, 19, 21, 22, 23], "dialectinfo": [3, 6, 10, 19, 21, 22, 23, 43], "dict": [8, 11, 12, 19, 21, 23, 24, 27, 30, 31, 32, 39, 43, 44], "dictionari": [8, 11, 15, 16, 39], "digraph": [11, 12], "directli": 45, "directori": 38, "div": [24, 30, 44], "do": [24, 25, 28, 43, 44], "doc": [3, 4], "document": 0, "doe": [2, 40], "don": 44, "done": [24, 27, 44], "dostoevski": 42, "doubl": 42, "download": [24, 30, 31, 39, 42, 44, 45], "download_pag": [24, 31, 42, 44], "driver": 10, "drop": [9, 43, 44], "dropcolumn": [9, 24, 25], "duckdb": 10, "duckdbdialectinfo": 10, "dure": [11, 13, 44], "dynam": [3, 6, 44], "each": [11, 18, 19, 20, 24, 30, 31, 44], "easi": 45, "effect": 45, "either": [11, 14, 16, 24, 26, 27, 29, 44], "element": [11, 15, 19, 21, 22, 23, 24, 27, 28], "els": 43, "empti": [11, 12], "en": [3, 4], "enabl": [3, 4, 45], "encod": 8, "engin": [2, 3, 4, 5, 6, 40, 43, 45], "ensur": 38, "enter": 8, "entri": 39, "env": [2, 3, 6, 9, 11, 16, 17, 19, 23, 24, 27, 33, 34, 35, 36, 37, 40, 43, 44], "environ": [2, 3, 6, 9, 19, 22, 23, 24, 27, 40, 41], "eqiuval": 44, "equival": 45, "error": [38, 39, 42], "escap": 43, "estim": [3, 6], "everi": 43, "everyth": [11, 12, 42, 44, 45], "evolv": 45, "exampl": [11, 12, 39, 42], "exc_typ": 32, "exc_valu": 32, "except": [2, 11, 12, 13, 24, 32, 38, 44], "execut": [3, 5, 6, 9, 11, 12, 16, 18, 43, 44, 45], "execute_text": [3, 5], "execute_with_length_hint": [3, 6], "executescript": [3, 5], "executescript_text": [3, 5], "exist": [9, 24, 26, 27, 40, 44], "expect": 38, "explain": 45, "explicitli": 42, "export": [19, 21, 40, 42], "export_result": 42, "express": [3, 5, 6, 19, 21, 22, 23], "exsist": [3, 6], "ext": [3, 6], "extend": [3, 5], "extens": 43, "extra": [19, 23], "fact": 44, "fals": [9, 10, 19, 21, 24, 25, 28, 29, 39, 44], "few": 43, "field": [24, 27, 30, 31, 32, 39, 44], "file": [8, 24, 26, 28, 29, 38, 43, 44], "fill": [24, 26, 44, 45], "filter": [2, 11, 12, 40, 45], "final": [40, 44], "find": [24, 26, 29, 31, 44], "find_subject": [24, 31, 44], "first": [2, 11, 12, 40], "first_nam": 42, "fix": [3, 4], "float": [7, 42, 43], "fn": [7, 24, 30, 31, 39, 42, 44, 45], "folder": [24, 26, 29, 38, 42, 44], "follow": 42, "foo": [8, 39, 45], "foreign_kei": [3, 4], "forget": 44, "form": 42, "format": [19, 20], "framework": 45, "from": [3, 6, 7, 9, 11, 12, 14, 15, 16, 17, 24, 25, 27, 28, 29, 30, 31, 39, 40, 42, 43, 44, 45], "from_filt": [11, 12], "from_input_row": 32, "from_nam": [33, 37], "from_str": [19, 21, 22, 23], "full": [42, 45], "full_nam": 42, "func": 8, "function": [19, 20, 24, 30, 31, 44, 45], "fyodor": 42, "gener": [0, 8, 11, 12, 16, 24, 30, 31, 44], "get": [10, 11, 16, 19, 20, 24, 27, 30, 31, 32, 38, 39, 44, 45], "get_dialect": 10, "get_nam": 39, "get_popped_field": 39, "give": [2, 40], "given": [10, 24, 30, 31, 44], "global": [2, 19, 21, 22, 23, 40], "go": 44, "goe": 42, "graph": [0, 1, 2, 24, 25, 26, 27, 30, 31, 42, 44], "graphviz": [11, 12, 40], "group": [2, 42], "h1": [24, 30, 44], "ha": [24, 27, 43, 44], "harvard": 45, "have": [11, 14, 16, 24, 25, 28, 30, 31, 40, 42, 44, 45], "help": [2, 11, 15, 40, 45], "here": [2, 24, 27, 40, 42, 44, 45], "hook": 40, "howev": [42, 44], "href": [24, 31, 44], "html": [3, 4, 24, 30, 31, 39, 42, 44], "http": [3, 4, 24, 31, 44, 45], "hub": [24, 31, 44], "hub_url": [24, 31, 44], "i": [2, 7, 11, 12, 13, 14, 16, 17, 24, 25, 27, 28, 29, 30, 31, 33, 35, 38, 40, 42, 43, 44, 45], "icon": 45, "id": [24, 29, 30, 31, 33, 34, 37, 39, 42, 43, 44, 45], "id_field": [24, 30, 31, 39, 44], "idcolumn": [24, 30, 31, 33, 37, 39, 44], "ident": 44, "identifi": [1, 24, 30, 31, 33, 34, 35, 37, 40, 43, 44], "if_exist": 9, "if_not_exist": [9, 24, 25], "impl": [24, 27, 28, 44], "implement": [3, 6, 24, 25, 27, 28, 43, 44], "implicitli": 44, "import": [19, 21, 24, 28, 30, 31, 40, 43, 44, 45], "includ": [19, 22, 24, 30, 31, 42, 44], "individi": 44, "individu": [24, 26, 29, 44], "infer": [24, 30, 31, 39, 44], "inform": 7, "infrastructur": 45, "init": 45, "init_sourc": 45, "initi": [2, 3, 5, 6, 8, 9, 11, 13, 15, 18, 19, 20, 21, 23, 24, 27, 32, 33, 34, 37, 41, 44], "inject": [40, 43], "inner": 39, "input": [24, 30, 31, 39, 44], "input_row": 32, "insert": [24, 29, 31, 33, 35, 39, 42, 43, 44, 45], "insid": [33, 36, 37, 42], "instal": 40, "instanc": 10, "instanti": [24, 27, 44], "instead": [24, 27, 29, 44], "int": [8, 24, 31, 33, 34, 37, 39, 42, 43, 44, 45], "integ": [42, 43, 45], "integr": 45, "interfac": [3, 5, 6, 19, 33, 36], "interrupt": 45, "into_mani": 39, "into_on": 39, "introduc": [43, 45], "invoc": 8, "is_don": [24, 30, 31, 44, 45], "is_done_column": [24, 30, 31, 44, 45], "isol": [3, 4], "isqlenviron": [3, 6, 9, 11, 17, 19, 22, 24, 27, 33, 34, 35, 36, 37, 43], "issu": [3, 4], "item": [43, 45], "items_tmp": 43, "iter": [3, 5, 6, 7, 9, 11, 12, 19, 21, 24, 27, 39, 43], "its": [11, 12, 33, 37, 40, 42], "itself": [24, 26, 44], "jinja": [0, 1, 2, 3, 9, 11, 16, 17, 24, 27, 30, 31, 33, 34, 35, 36, 37, 40, 43, 44, 45], "jinja2": [19, 21, 22, 23], "join": 43, "joiner": 43, "joinpath": 42, "json": [24, 29, 39, 42, 44, 45], "json_array_elements_text": [24, 29, 44], "jsonb": 42, "just": 44, "keep": 39, "kei": [24, 27, 29, 31, 42, 43, 44, 45], "keyword": 39, "known": 44, "kwarg": [2, 3, 4, 19, 20, 21, 22, 23], "last_nam": 42, "later": [11, 14, 16, 44], "layer": [19, 23], "least": 43, "leav": [24, 25, 28, 31, 44], "left": [11, 12, 24, 30, 31, 44], "length_hint": 7, "let": [3, 6, 40], "level": 45, "lightweight": 45, "like": [8, 19, 21, 22, 23, 24, 27, 33, 34, 35, 37, 43, 45], "line": 40, "list": [3, 6, 11, 14, 18, 19, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 39, 44], "load": [42, 45], "load_peopl": 42, "loadcsv": 44, "local": [19, 21, 23, 24, 27, 29, 42, 43, 44, 45], "locat": [33, 37], "log": [7, 24, 32], "logic": 45, "long": 45, "mai": [24, 26, 27, 30, 31, 42, 44], "main": 42, "maintain": 45, "make": [8, 24, 30, 31, 44, 45], "make_modul": [19, 21], "manag": [8, 24, 30, 31, 44, 45], "mani": [24, 31, 39, 44], "map": [3, 5, 6, 11, 16, 19, 21, 23, 24, 30, 31, 39, 44], "maptonewcolumn": [7, 24, 30, 44, 45], "maptonewt": [7, 24, 31, 42, 44, 45], "mark": 42, "mean": [11, 12], "meow": 39, "metadata": [24, 30, 31, 39, 44], "method": [3, 5, 6, 44], "minim": 45, "mode": 8, "modifi": [24, 27, 43, 44], "modul": 19, "modular": 45, "more": [11, 14, 24, 31, 39, 42, 44], "most": 44, "multicontextmanag": 8, "multipl": [3, 6, 7, 8, 11, 14, 16, 19, 21, 22, 23, 24, 27, 39, 42, 43, 44], "must": [2, 11, 14, 16, 24, 26, 29, 33, 35, 40, 42, 43, 44], "mutablemap": [19, 21, 22, 23], "my": 43, "my_filt": 43, "my_funct": 40, "my_glob": 43, "myapp": 43, "mypipelin": [2, 24, 30, 31, 40, 42, 44, 45], "mytask": [24, 27], "mytaskdef": [24, 27], "n": 43, "name": [8, 10, 11, 12, 16, 18, 19, 21, 24, 26, 27, 28, 29, 30, 31, 33, 34, 35, 37, 39, 43, 44, 45], "name_upp": [24, 26, 44], "namedtask": [11, 18], "necessari": 40, "need": [24, 27, 40, 44, 45], "nest": [7, 11, 15, 16, 41], "new": [2, 3, 5, 6, 24, 30, 31, 44, 45], "new_tabl": [24, 29, 44], "next": [24, 31, 39, 44, 45], "next_url": [24, 31, 44], "ninsert": 43, "node": [11, 12, 19, 21, 22, 23], "none": [2, 3, 5, 6, 7, 8, 11, 12, 14, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 37, 38, 39, 40, 43, 44], "note": 42, "now": [24, 30, 31, 44], "nselect": 43, "null": 43, "number": [3, 6, 7, 43], "object": [3, 6, 8, 11, 13, 16, 19, 21, 22, 24, 27, 33, 36, 44], "occur": [11, 13, 24, 32], "off": 39, "omit": [24, 30, 31, 44], "onc": [19, 21, 22, 23, 24, 31, 44], "one": [2, 3, 6, 11, 12, 14, 24, 30, 31, 39, 40, 42, 43, 44, 45], "onetomani": [24, 31, 39, 44], "onetoon": [24, 30, 39, 44], "onli": [8, 11, 12, 17, 24, 25, 28, 31, 40, 44, 45], "open": [8, 24, 28], "oper": 45, "option": [2, 24, 26, 30, 31, 33, 35, 43, 44, 45], "order": [11, 16, 42, 43], "org": [3, 4, 40], "other": [24, 29, 33, 34, 37, 42, 43, 44], "otherwis": [11, 12, 17, 38], "out": [11, 12, 44, 45], "output": [11, 14, 16, 24, 25, 26, 27, 28, 30, 31, 39, 42, 43, 44, 45], "outputof": [11, 16, 17, 24, 27, 29, 30, 31, 42, 43, 44, 45], "outsid": [11, 13], "over": [7, 24, 26, 30, 31, 44, 45], "overrid": [2, 24, 27], "own": [2, 40, 43], "p": 8, "page": [0, 24, 30, 31, 42, 44], "page_num": 42, "pair": [11, 16, 18, 24, 27], "panda": [24, 28, 44], "param": [33, 34, 37, 45], "paramet": [2, 3, 5, 6, 7, 9, 11, 12, 15, 16, 19, 20, 21, 23, 24, 27, 33, 34, 35, 37, 39, 40, 43, 44], "parent": [38, 40], "pars": [11, 15, 24, 30, 40, 42, 44, 45], "parse_pag": 45, "parsel": [24, 30, 31, 44], "part": [11, 15, 24, 25, 27, 28, 44, 45], "particularli": 45, "pass": [2, 10, 24, 26, 29, 30, 31, 39, 40, 44], "past": 43, "path": [11, 12, 14, 16, 18, 24, 26, 28, 29, 38, 42, 43, 44, 45], "pathlib": [38, 44, 45], "pd": [24, 28, 44], "peopl": [24, 26, 42, 44], "perform": [11, 12, 24, 27, 28], "permit": [11, 14], "person": 40, "person_id": 42, "philosophi": 45, "physic": 45, "piec": 44, "pip": 45, "pipelin": [2, 11, 14, 15, 24, 26, 27, 29, 30, 31, 40, 41, 44, 45], "pipelinemain": 42, "pipelinenest": 42, "place": [24, 30, 31, 42, 44], "placehold": [1, 24, 31, 33, 35, 37, 43, 44, 45], "poetri": 45, "pool": [3, 5], "poolproxiedconnect": [3, 5], "pop": [24, 32, 39], "pop_id_field": [24, 30, 31, 39, 42, 44, 45], "popped_field": 32, "popped_nam": 32, "portabl": 45, "posit": [2, 40], "postgresdialectinfo": 10, "postprocess": [24, 26, 44], "pre": [24, 26, 29, 44], "preced": [24, 26, 30, 31, 44], "prefer": 45, "prefix": 42, "prepar": [11, 17, 24, 25, 27, 28, 44, 45], "primari": [24, 29, 31, 42, 43, 44, 45], "primit": [33, 34, 37], "print": [2, 7, 8, 40], "process": [24, 30, 31, 32, 42, 44, 45], "progress": [7, 45], "project": 45, "properti": [3, 6, 11, 18, 19, 21, 22, 23, 24, 25, 27, 28, 33, 34, 37, 44], "protocol": [8, 19, 22], "provid": [2, 3, 6, 24, 30, 31, 40, 44, 45], "purpos": [24, 32, 42], "put": 44, "py": [24, 26, 29, 40, 44, 45], "python": [44, 45], "queri": [24, 30, 31, 44], "quick": [3, 6], "quickli": 45, "quit": [24, 30, 31, 44], "r": 8, "raise_for_statu": [24, 30, 44, 45], "ralsei": [0, 40, 41, 42, 43, 44], "ralseiconsol": 7, "rang": 43, "rank": [42, 45], "rate": [24, 30, 31, 44], "raw": [33, 34, 35, 37, 43, 45], "re": [39, 44], "read": 40, "read_csv": [24, 28, 44], "read_text": [24, 26, 29, 42, 43, 44, 45], "record": [40, 42, 45], "record_id": 45, "recurs": [11, 13], "redo": [11, 18, 24, 27], "reduc": 44, "refer": [11, 16, 24, 31, 33, 34, 37, 42, 44, 45], "regardless": 42, "regist": [10, 19, 20], "register_dialect": 10, "register_typ": [19, 20], "rel": [11, 14, 24, 26, 29, 42, 44], "relat": [7, 11, 12], "relations_str": [11, 12], "remap": 39, "rename_input": 39, "rename_output": 39, "render": [3, 6, 19, 20, 21, 22, 23, 24, 27, 31, 33, 34, 36, 37, 40, 43, 44], "render_execut": [3, 6, 40], "render_executescript": [3, 6], "render_split": [19, 21, 22, 23, 43], "render_sql": [19, 21, 22, 23, 44], "render_sql_split": [19, 21, 22, 23], "repres": [11, 15, 19, 21], "represent": [19, 20], "reprocess": 45, "request": [8, 24, 30, 44, 45], "requir": [11, 14, 16, 45], "rerun": 45, "resolut": [11, 13, 24, 27, 41], "resolv": [11, 13, 14, 16, 17, 24, 25, 26, 27, 30, 31, 42, 43, 44], "resolvercontexterror": [11, 13], "respons": [24, 30, 44, 45], "result": [24, 30, 31, 43, 44, 45], "resum": [24, 30, 31, 44, 45], "return": [2, 3, 6, 11, 12, 16, 17, 24, 27, 30, 31, 39, 42, 44, 45], "reusabl": 45, "reusable_contextmanag": 8, "reusable_contextmanager_const": [8, 24, 30, 31, 44], "revert": 44, "rich": 7, "root": [11, 14, 16, 42], "row": [3, 6, 7, 24, 30, 31, 32, 33, 37, 39, 44, 45], "row_context_atrribut": [24, 32], "row_context_var": [24, 32], "run": [2, 11, 18, 24, 26, 27, 29, 30, 31, 44, 45], "run_cli": [2, 40, 45], "runtim": [19, 21], "runtimeerror": [11, 13], "said": [24, 27], "sake": 42, "same": [11, 12, 14, 16, 24, 30, 31, 33, 37, 40, 42, 43, 44], "save": [24, 27, 30, 39, 44], "savepoint": [3, 4], "schema": [2, 24, 28, 33, 35, 40, 43, 44, 45], "schema_nam": [33, 35, 43], "scienc": 45, "scope": [24, 30, 31, 44], "score": 42, "scrape_pag": [24, 30, 31, 44], "script": [24, 26, 27, 29, 40, 44], "section": [11, 12], "see": [3, 6, 11, 12, 15, 19, 21, 22, 23], "sel": [24, 30, 31, 44], "select": [24, 29, 30, 31, 42, 43, 44, 45], "selector": [24, 30, 31, 44], "selenium": [24, 30, 31, 44], "self": [3, 5, 11, 15, 19, 21, 22, 23, 24, 27, 28, 29, 30, 31, 40, 42, 43, 44, 45], "sep": 43, "separ": [3, 6, 11, 15, 16, 24, 26, 29, 43, 44, 45], "sequenc": [7, 11, 12, 24, 25, 26, 30, 31, 44], "seri": [3, 5], "serial": [24, 29, 31, 44], "serializ": [3, 4], "serv": 42, "sess": 8, "session": 8, "set": [10, 11, 12, 14, 16, 19, 21, 22, 23, 24, 26, 27, 30, 31, 32, 33, 37, 40, 42, 44], "set_stat": [33, 37], "setup": 45, "share": [19, 21], "shorthand": [19, 21, 22, 23], "show": 40, "signatur": [11, 15], "signifi": 42, "similar": [3, 5, 19, 20], "simplifi": 45, "sinc": [42, 44, 45], "singl": [3, 6, 8, 24, 31, 43, 44, 45], "single_filt": [11, 12], "so": [24, 30, 31, 39, 40, 44, 45], "solut": 45, "some": [42, 43], "sort": [11, 12], "sort_filt": [11, 12], "sourc": [3, 6, 19, 20, 21, 22, 23, 24, 29, 31, 42, 44, 45], "source_id": 45, "source_t": [24, 31, 42, 44, 45], "space": [33, 35, 43], "special": [33, 35, 43, 45], "specif": [19, 21, 22, 23, 45], "specifi": [24, 26, 31, 44], "sphinx": 0, "split": [3, 6, 19, 21, 22, 23, 24, 26, 29, 41, 42, 44, 45], "sql": [1, 3, 5, 6, 10, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 33, 34, 35, 36, 37, 40, 41, 42, 44, 45], "sqladapt": [19, 20, 21, 22, 23], "sqlalchemi": [2, 3, 4, 5, 6, 10, 19, 21, 22, 23, 24, 27, 28, 40, 44, 45], "sqlalchemy_conn": [3, 6], "sqlenviron": [2, 11, 16, 19, 21, 22, 23, 24, 27, 40, 43], "sqlenvironmentwrapp": [19, 22, 23], "sqlite": [3, 4, 5, 10, 43, 45], "sqlitedialectinfo": 10, "sqltemplat": [19, 21, 22, 23], "sqltemplatemodul": [19, 21], "stage": 44, "start": [42, 43, 44], "stat": 42, "statement": [3, 5, 6, 19, 21, 22, 23, 24, 26, 27, 29, 30, 31, 33, 37, 43, 44, 45], "static": [11, 15, 32], "statu": 44, "step": [7, 11, 18, 43], "still": 39, "stop": [24, 30, 31, 43, 44], "store": [11, 14, 24, 27, 32, 44, 45], "str": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 16, 18, 19, 20, 21, 22, 23, 24, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 43, 44, 45], "string": [3, 5, 11, 15, 16, 18, 19, 21, 22, 23, 24, 26, 27, 29, 33, 34, 35, 36, 37, 43, 44, 45], "subclass": [2, 11, 15, 24, 27, 40], "subject": [24, 31, 44], "subject_id": [24, 31, 44], "success": [11, 18, 24, 30, 31, 44], "super": [2, 40, 45], "support": [7, 43, 45], "supports_column_if_not_exist": 10, "supports_rowcount": 10, "sure": [24, 30, 31, 44], "t": [7, 8, 11, 14, 19, 20, 24, 27, 38, 44], "tabl": [1, 9, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 42, 43, 44, 45], "table_exist": [9, 44], "table_nam": [33, 34, 35, 43], "tag": [3, 6, 19, 21, 22, 23, 24, 26, 29, 41, 44, 45], "take": [24, 26, 30, 31, 44, 45], "taken": [11, 16], "target": [9, 44], "task": [0, 1, 7, 11, 12, 14, 16, 17, 18, 39, 40, 41, 42, 43, 45], "task_path": [11, 14, 16], "taskdef": [11, 16, 24, 26, 27, 28, 29, 30, 31, 43, 44], "taskimpl": [11, 17, 24, 25, 27, 28, 44], "tasks_str": [11, 12], "tasksequ": [11, 12, 18], "templat": [3, 6, 19, 21, 22, 23, 24, 26, 29, 33, 34, 35, 36, 37, 40, 41, 42, 44, 45], "template_class": [19, 21, 22, 23], "template_param": [3, 6], "templatemodul": [19, 21], "text": [19, 21, 22, 23, 24, 26, 29, 30, 31, 42, 43, 44, 45], "textclaus": [19, 21, 22, 23, 24, 27, 28], "textiowrapp": 8, "than": [11, 14, 39], "thei": 44, "them": [24, 26, 27, 39, 42, 44], "therebi": 45, "thi": [0, 2, 7, 11, 12, 14, 16, 19, 21, 24, 27, 28, 29, 30, 31, 38, 40, 44, 45], "those": [24, 26, 42, 44, 45], "three": 40, "through": [24, 31, 43, 44], "throw": [38, 39, 42], "time": [8, 45], "titl": [24, 30, 44], "tmp": [42, 43], "to_sql": [19, 20, 24, 28, 33, 34, 35, 37, 43, 44], "togeth": [39, 40], "token": 43, "tokyo": 39, "top": [19, 23], "topolog": [11, 12], "topological_sort": [11, 12], "tosql": [10, 33, 34, 35, 36, 37, 43], "total": 7, "tr": [24, 31, 44], "traceback": [2, 3, 6, 32], "tracebacktyp": 8, "track": [7, 24, 30, 31, 44, 45], "transact": [3, 4, 43, 45], "transform": [19, 20], "translat": 43, "treat": 43, "treepath": [11, 12, 14, 15, 16, 18], "true": [3, 5, 10, 39], "try": [24, 30, 31, 44], "tupl": [11, 15, 24, 27], "turn": [19, 21, 22, 23, 33, 34, 37, 39, 40], "two": 42, "txt": 8, "type": [0, 1, 8, 9, 10, 11, 14, 15, 16, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 39, 41, 42, 44, 45], "type_": [3, 6, 19, 20], "union": [11, 12], "uniqu": [24, 30, 31, 33, 37, 44], "univers": 45, "unless": 44, "unlik": 7, "unnest": [24, 29, 44], "up": [24, 31, 44], "updat": [24, 26, 30, 31, 33, 37, 42, 44], "update1": 42, "update2": 42, "uploadcsv": [24, 28, 44], "upper": [24, 26, 44], "url": [2, 3, 4, 24, 30, 31, 40, 42, 44, 45], "us": [3, 6, 7, 8, 9, 10, 11, 14, 16, 19, 21, 24, 26, 27, 29, 30, 31, 32, 33, 34, 37, 39, 40, 42, 43, 44, 45], "usag": 40, "user": 45, "usual": [24, 27, 44], "utf": 8, "util": [0, 1, 3, 5, 24, 26, 29, 44], "valu": [3, 6, 7, 8, 11, 14, 16, 17, 19, 20, 21, 22, 23, 24, 27, 30, 31, 33, 35, 37, 38, 40, 42, 43, 44, 45], "value_column": 33, "valuecolumn": [24, 30, 31, 33, 37, 42, 44, 45], "valuecolumnbas": [24, 30, 31, 33, 37, 44], "valuecolumnrend": [33, 37], "valuecolumnsetstat": [33, 37], "var": [19, 21], "variabl": [19, 21, 23, 24, 26, 27, 29, 30, 31, 44], "version": [33, 34, 37], "view": [24, 28, 29, 43, 44], "visual": 40, "wa": [43, 45], "wai": [42, 45], "want": 7, "we": [44, 45], "webdriv": [24, 30, 31, 44], "well": 43, "whatev": [24, 27, 44], "when": [2, 7, 11, 14, 16, 24, 27, 40, 42], "where": [11, 16, 24, 27, 30, 31, 33, 37, 42, 44, 45], "whether": [24, 29, 44], "which": [24, 30, 31, 44], "while": [24, 31, 43, 44], "who": 45, "whole": [11, 12], "within": [7, 24, 25, 28, 43, 44], "withot": 45, "without": [8, 39, 43], "work": 7, "workflow": 45, "would": [39, 45], "wrap": [19, 21, 22, 23, 33, 34, 37], "wrapper": [0, 1, 3, 4, 24, 30, 31, 44], "write": [42, 43], "written": 44, "xpath": [24, 30, 31, 44], "year": [39, 45], "yield": [8, 24, 30, 31, 39, 44, 45], "you": [2, 3, 6, 7, 10, 11, 16, 24, 25, 26, 27, 28, 29, 30, 31, 40, 42, 43, 44], "your": [2, 11, 16, 24, 27, 30, 31, 40, 43, 44, 45]}, "titles": ["API Reference", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">ralsei</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">ralsei.app</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">ralsei.connection</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">ralsei.connection.create</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">ralsei.connection.ext</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">ralsei.connection.jinja</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">ralsei.console</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">ralsei.contextmanagers</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">ralsei.db_actions</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">ralsei.dialect</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">ralsei.graph</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">ralsei.graph.dag</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">ralsei.graph.error</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">ralsei.graph.outputof</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">ralsei.graph.path</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">ralsei.graph.pipeline</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">ralsei.graph.resolver_context</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">ralsei.graph.sequence</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">ralsei.jinja</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">ralsei.jinja.adapter</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">ralsei.jinja.environment</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">ralsei.jinja.interface</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">ralsei.jinja.wrapper</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">ralsei.task</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">ralsei.task.add_columns</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">ralsei.task.add_columns_sql</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">ralsei.task.base</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">ralsei.task.create_table</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">ralsei.task.create_table_sql</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">ralsei.task.map_to_new_columns</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">ralsei.task.map_to_new_table</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">ralsei.task.rowcontext</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">ralsei.types</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">ralsei.types.column</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">ralsei.types.primitives</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">ralsei.types.to_sql</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">ralsei.types.value_column</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">ralsei.utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">ralsei.wrappers</span></code>", "Application", "Guides", "Pipelines", "SQL Templates", "Tasks", "Welcome to ralsei\u2019s documentation!"], "titleterms": {"": 45, "The": 43, "adapt": 20, "add_column": 25, "add_columns_sql": 26, "alias": [10, 11, 14, 16, 39], "api": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39], "app": 2, "applic": 40, "argument": 40, "awar": 43, "base": 27, "builtin": 44, "class": [2, 3, 5, 6, 8, 9, 10, 11, 12, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37], "cli": 40, "column": 34, "command": 40, "common": 40, "connect": [3, 4, 5, 6], "consol": 7, "content": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39], "contextmanag": 8, "creat": 4, "create_t": 28, "create_table_sql": 29, "custom": [40, 43, 44], "dag": 12, "data": [1, 7, 24, 32], "db_action": 9, "default": 43, "delet": 40, "depend": 42, "describ": 40, "design": 45, "dialect": 10, "dictionari": 42, "document": 45, "environ": [21, 43], "error": 13, "exampl": [2, 10, 24, 26, 27, 28, 29, 30, 31, 40, 44, 45], "ext": 5, "filter": 43, "function": [3, 4, 7, 8, 9, 10, 11, 17, 38, 39], "global": 43, "goal": 45, "graph": [11, 12, 13, 14, 15, 16, 17, 18, 40], "guid": 41, "initi": 40, "instal": 45, "interfac": 22, "jinja": [6, 19, 20, 21, 22, 23], "map_to_new_column": 30, "map_to_new_t": 31, "modul": [4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39], "nest": 42, "note": [24, 26, 27, 29, 30, 31, 44], "option": 40, "outputof": 14, "packag": [1, 2, 3, 11, 19, 24, 33], "path": 15, "pipelin": [16, 42], "primit": 35, "ralsei": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 45], "redo": 40, "refer": 0, "resolut": 42, "resolver_context": 17, "rowcontext": 32, "run": 40, "sequenc": 18, "split": 43, "sql": 43, "submodul": 1, "subpackag": 1, "tag": 43, "task": [24, 25, 26, 27, 28, 29, 30, 31, 32, 44], "templat": 43, "tip": 45, "to_sql": 36, "type": [33, 34, 35, 36, 37, 43], "util": 38, "value_column": 37, "variabl": 43, "warn": [24, 27, 42], "welcom": 45, "wrapper": [23, 39]}})